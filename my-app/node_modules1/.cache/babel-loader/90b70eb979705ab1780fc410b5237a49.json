{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Leagues\\\\LeagueSchedule\\\\LeagueScheduleContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport LeagueSchedule from './LeagueSchedule';\nimport { withRouter } from 'react-router-dom';\nimport { setLeagueSchedule } from \"../../../redux/leagues-reducer\";\nimport { setlistLeaguesCreator } from \"../../../redux/leagues-reducer\";\nimport { compose } from \"redux\"; //import leagueScheduleData from '../../../data/EventsOfLeague177';\n\nclass LeagueScheduleContainer extends React.Component {\n  //let league_id = props.match.params.league_id;\n  componentDidMount() {\n    //loaded='false';\n\n    /*   let league_id = this.props.match.params.league_id;\r\n    \t\tlet API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n        \t\r\n        \tlet period = this.props.period;\r\n        \t//console.log(\"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+period);\r\n        \t//setLoaded(false);\r\n        \tconst apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+period;\r\n    \r\n        \tfetch(apiUrl, {\r\n          \t\tmethod: 'GET',\r\n          \t\theaders: {\r\n             \t  'X-Auth-Token': API_KEY\r\n          \t\t}\r\n        \t})\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            console.log({matches:response.matches});\r\n            this.props.setLeagueSchedule(response.matches);\r\n              //this.setState({isLoaded: true});\r\n          })\r\n          .then((error) => {\r\n              this.setState({false: true});\r\n              this.setState({error});\r\n          })    \t\r\n        \t.catch(error => console.log('parsing failed', error))\r\n    */\n    this.props.setLeagueSchedule(this.props.Data.matches); //action = setLeagueSchedule(Data.matches);\n    //this.props.store.dispatch(setLeagueSchedule(leagueScheduleData.matches));  \n  }\n  /*if (error) {\r\n      \t\treturn <div>Error: {error.message}</div>;\r\n  \t\t} \r\n  \t\telse if (!loaded) {\r\n      \t\treturn <div>Loading...</div>;\r\n  \t\t} \r\n  \t\telse {*/\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(LeagueSchedule, {\n      leagueSchedule: this.props.leagueSchedule,\n      league_name: this.props.league_name,\n      period: this.props.period,\n      search: this.props.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }); //}\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  leagueSchedule: state.leagues.leagueSchedule,\n  league_name: state.leagues.league.name,\n  period: state.period,\n  search: state.search\n});\n\nexport default compose(connect(mapStateToProps, {\n  setLeagueSchedule\n}), withRouter)(LeagueScheduleContainer); //export default connect(mapStateToProps,{setLeagueSchedule})(withRouter(LeagueScheduleContainer));\n//export default LeagueScheduleContainer;","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Leagues/LeagueSchedule/LeagueScheduleContainer.js"],"names":["React","Component","connect","LeagueSchedule","withRouter","setLeagueSchedule","setlistLeaguesCreator","compose","LeagueScheduleContainer","componentDidMount","props","Data","matches","render","leagueSchedule","league_name","period","search","mapStateToProps","state","leagues","league","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,iBAAR,QAAgC,gCAAhC;AACA,SAAQC,qBAAR,QAAoC,gCAApC;AACA,SAAQC,OAAR,QAAsB,OAAtB,C,CAEA;;AAEA,MAAMC,uBAAN,SAAsCR,KAAK,CAACC,SAA5C,CAAsD;AAEtD;AAECQ,EAAAA,iBAAiB,GAAE;AAClB;;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,SAAKC,KAAL,CAAWL,iBAAX,CAA6B,KAAKK,KAAL,CAAWC,IAAX,CAAgBC,OAA7C,EA7BgB,CAgChB;AACA;AAEA;AAIF;AACF;AACA;AACA;AACA;AACA;AACA;;;AACUC,EAAAA,MAAM,GAAG;AACf,wBACA,oBAAC,cAAD;AAAiB,MAAA,cAAc,EAAI,KAAKH,KAAL,CAAWI,cAA9C;AAA8D,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK,WAAtF;AAAmG,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MAAtH;AAA8H,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,MAAjJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADe,CAIjB;AACA;;AAvDoD;;AA0DtD,IAAIC,eAAe,GAAIC,KAAD,KAAY;AAC9BL,EAAAA,cAAc,EAAGK,KAAK,CAACC,OAAN,CAAcN,cADD;AAE9BC,EAAAA,WAAW,EAAGI,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqBC,IAFL;AAG9BN,EAAAA,MAAM,EAACG,KAAK,CAACH,MAHiB;AAI9BC,EAAAA,MAAM,EAACE,KAAK,CAACF;AAJiB,CAAZ,CAAtB;;AAOA,eAAeV,OAAO,CAACL,OAAO,CAACgB,eAAD,EAAiB;AAACb,EAAAA;AAAD,CAAjB,CAAR,EACCD,UADD,CAAP,CAEbI,uBAFa,CAAf,C,CAGA;AACA","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport LeagueSchedule from './LeagueSchedule';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {setLeagueSchedule} from \"../../../redux/leagues-reducer\";\r\nimport {setlistLeaguesCreator} from \"../../../redux/leagues-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n//import leagueScheduleData from '../../../data/EventsOfLeague177';\r\n\r\nclass LeagueScheduleContainer extends React.Component {\r\n\r\n//let league_id = props.match.params.league_id;\r\n\t\r\n\tcomponentDidMount(){\r\n\t\t//loaded='false';\r\n/*   let league_id = this.props.match.params.league_id;\r\n\t\tlet API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    \t\r\n    \tlet period = this.props.period;\r\n    \t//console.log(\"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+period);\r\n    \t//setLoaded(false);\r\n    \tconst apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+period;\r\n\r\n    \tfetch(apiUrl, {\r\n      \t\tmethod: 'GET',\r\n      \t\theaders: {\r\n         \t  'X-Auth-Token': API_KEY\r\n      \t\t}\r\n    \t})\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log({matches:response.matches});\r\n        this.props.setLeagueSchedule(response.matches);\r\n          //this.setState({isLoaded: true});\r\n      })\r\n      .then((error) => {\r\n          this.setState({false: true});\r\n          this.setState({error});\r\n      })    \t\r\n    \t.catch(error => console.log('parsing failed', error))\r\n*/\r\n   \r\n    this.props.setLeagueSchedule(this.props.Data.matches);\r\n   \r\n \r\n    //action = setLeagueSchedule(Data.matches);\r\n    //this.props.store.dispatch(setLeagueSchedule(leagueScheduleData.matches));  \r\n\r\n  \t}\t\r\n\r\n\r\n\t\r\n\t\t/*if (error) {\r\n      \t\treturn <div>Error: {error.message}</div>;\r\n  \t\t} \r\n  \t\telse if (!loaded) {\r\n      \t\treturn <div>Loading...</div>;\r\n  \t\t} \r\n  \t\telse {*/\r\n          render() {\r\n\t\t  return (\r\n\t\t\t\t<LeagueSchedule  leagueSchedule = {this.props.leagueSchedule} league_name={this.props.league_name} period={this.props.period} search={this.props.search}/>\r\n\t\t\t)\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    leagueSchedule : state.leagues.leagueSchedule,\r\n    league_name : state.leagues.league.name,\r\n    period:state.period,\r\n    search:state.search\r\n})\r\n\r\nexport default compose(connect(mapStateToProps,{setLeagueSchedule}),\r\n                       withRouter\r\n)(LeagueScheduleContainer);\r\n//export default connect(mapStateToProps,{setLeagueSchedule})(withRouter(LeagueScheduleContainer));\r\n//export default LeagueScheduleContainer;"]},"metadata":{},"sourceType":"module"}
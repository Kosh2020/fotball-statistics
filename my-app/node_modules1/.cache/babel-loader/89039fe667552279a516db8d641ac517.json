{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Katusha\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Katusha\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Katusha\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Katusha\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from\"react-redux\";import{compose}from\"redux\";import moment from'moment';import Period from'../../common/Period/Period';import TeamSchedule from'./TeamSchedule';import{withRouter}from'react-router-dom';import{setTeamSchedule}from\"../../../redux/teams-reducer\";import{setLeagueCreator}from\"../../../redux/leagues-reducer\";import{setStartDatePeriod}from\"../../../redux/period-reducer\";import{setEndDatePeriod}from\"../../../redux/period-reducer\";var TeamScheduleContainer=/*#__PURE__*/function(_React$Component){_inherits(TeamScheduleContainer,_React$Component);var _super=_createSuper(TeamScheduleContainer);function TeamScheduleContainer(){var _this;_classCallCheck(this,TeamScheduleContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.apiToState=function(){var team_id=_this.props.match.params.team_id;var API_KEY=process.env.REACT_APP_USER_TOKEN;var year=_this.props.year;var dateFrom=moment(_this.props.startDate).format('YYYY-MM-DD');var dateTo=moment(_this.props.endDate).format('YYYY-MM-DD');//setLoaded(false);\n//https://api.football-data.org/v2/teams/66/matches?dateFrom=2019-01-01&dateTo=2019-12-08\nvar apiUrl=\"https://api.football-data.org/v2/teams/\"+team_id+\"/matches?dateFrom=\"+dateFrom+\"&dateTo=\"+dateTo;fetch(apiUrl,{method:'GET',headers:{'X-Auth-Token':API_KEY}}).then(function(response){return response.json();}).then(function(response){_this.props.setTeamSchedule(response.matches);if(_this.props.league_id!==_this.props.match.params.league_id){var league={id:response.competition.code,name:response.competition.name};_this.props.setLeagueCreator(league);}//this.setState({isLoaded: true});\n}).then(function(error){_this.setState({false:true});_this.setState({error:error});}).catch(function(error){return console.log('parsing failed',error);});//this.props.setTeamSchedule(this.props.Data);\n/* action = setLeagueSchedule(this.props.Data.matches);\r\n    this.props.dispatch(action);\r\n */};_this.selStartDate=function(date){_this.props.setStartDatePeriod(date);};_this.selEndDate=function(date){_this.props.setEndDatePeriod(date);};return _this;}_createClass(TeamScheduleContainer,[{key:\"componentDidMount\",value:function componentDidMount(prevProps){this.apiToState();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.startDate!==prevProps.startDate||this.props.endDate!==prevProps.endDate||this.props.search!==prevProps.search){this.apiToState();}}},{key:\"render\",value:function render(){/*if (error) {\r\n      \t\treturn <div>Error: {error.message}</div>;\r\n  \t\t} \r\n  \t\telse if (!loaded) {\r\n      \t\treturn <div>Loading...</div>;\r\n  \t\t} \r\n  \t\telse {*/return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Period,{store:this.props.store}),/*#__PURE__*/React.createElement(TeamSchedule,{league_name:this.props.league_name,teamSchedule:this.props.teamSchedule,team_name:this.props.team_name,year:this.props.year,startDate:this.props.startDate,endDate:this.props.endDate,selStartDate:this.selStartDate,selEndDate:this.selEndDate,search:this.props.search}));//}\n}}]);return TeamScheduleContainer;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{teamSchedule:state.teams.teamSchedule,league_name:state.leagues.league.name,league_id:state.leagues.league.id,team_name:state.teams.team.name,team_id:state.teams.team.id,year:state.year,startDate:state.period.startDate,endDate:state.period.endDate,search:state.search};};export default compose(connect(mapStateToProps,{setTeamSchedule:setTeamSchedule}),connect(mapStateToProps,{setLeagueCreator:setLeagueCreator}),connect(mapStateToProps,{setStartDatePeriod:setStartDatePeriod}),connect(mapStateToProps,{setEndDatePeriod:setEndDatePeriod}),withRouter)(TeamScheduleContainer);//league_name={this.props.league_name}setStartDateTeamSchedule","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Teams/TeamSchedule/TeamScheduleContainer.js"],"names":["React","Component","connect","compose","moment","Period","TeamSchedule","withRouter","setTeamSchedule","setLeagueCreator","setStartDatePeriod","setEndDatePeriod","TeamScheduleContainer","apiToState","team_id","props","match","params","API_KEY","process","env","REACT_APP_USER_TOKEN","year","dateFrom","startDate","format","dateTo","endDate","apiUrl","fetch","method","headers","then","response","json","matches","league_id","league","id","competition","code","name","error","setState","false","catch","console","log","selStartDate","date","selEndDate","prevProps","search","store","league_name","teamSchedule","team_name","mapStateToProps","state","teams","leagues","team","period"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport moment from 'moment';\r\nimport Period from '../../common/Period/Period';\r\nimport TeamSchedule from './TeamSchedule';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {setTeamSchedule} from \"../../../redux/teams-reducer\";\r\nimport {setLeagueCreator} from \"../../../redux/leagues-reducer\";\r\nimport {setStartDatePeriod} from \"../../../redux/period-reducer\";\r\nimport {setEndDatePeriod} from \"../../../redux/period-reducer\";\r\n\r\nclass TeamScheduleContainer extends React.Component {\r\n\r\n\r\n\r\napiToState =()=>{\r\n      let team_id = this.props.match.params.team_id;\r\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n      \r\n    let year = this.props.year;\r\n    let dateFrom = moment(this.props.startDate).format('YYYY-MM-DD')\r\n    let dateTo = moment(this.props.endDate).format('YYYY-MM-DD')\r\n    //setLoaded(false);\r\n    //https://api.football-data.org/v2/teams/66/matches?dateFrom=2019-01-01&dateTo=2019-12-08\r\n    const apiUrl = \"https://api.football-data.org/v2/teams/\"+team_id+\"/matches?dateFrom=\"+dateFrom+\"&dateTo=\"+dateTo;\r\n    fetch(apiUrl, {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Auth-Token': API_KEY\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      this.props.setTeamSchedule(response.matches);\r\n       if (this.props.league_id !== this.props.match.params.league_id)\r\n           {let league={id:response.competition.code, name: response.competition.name};\r\n            this.props.setLeagueCreator(league);}\r\n       //this.setState({isLoaded: true});\r\n    })\r\n    .then((error) => {\r\n      this.setState({false: true});\r\n      this.setState({error});\r\n    })      \r\n    .catch(error => console.log('parsing failed', error))\r\n\r\n  \r\n\r\n    //this.props.setTeamSchedule(this.props.Data);\r\n   /* action = setLeagueSchedule(this.props.Data.matches);\r\n    this.props.dispatch(action);\r\n */\r\n  \t}\t\r\ncomponentDidMount(prevProps) {\r\n   this.apiToState();\r\n}\r\ncomponentDidUpdate(prevProps) {\r\n  if ((this.props.startDate !== prevProps.startDate)||(this.props.endDate !== prevProps.endDate)||((this.props.search !== prevProps.search))) {\r\n      this.apiToState();\r\n}\r\n}\r\n  selStartDate = (date) => {\r\n      this.props.setStartDatePeriod(date);\r\n  }\r\n\r\n  selEndDate = (date) => {\r\n      this.props.setEndDatePeriod(date);\r\n  }\r\n\r\n\trender() {\r\n\t\t/*if (error) {\r\n      \t\treturn <div>Error: {error.message}</div>;\r\n  \t\t} \r\n  \t\telse if (!loaded) {\r\n      \t\treturn <div>Loading...</div>;\r\n  \t\t} \r\n  \t\telse {*/\r\n\t\t  return <>\r\n        <Period store={this.props.store} />\r\n\t\t\t\t<TeamSchedule  league_name={this.props.league_name}  teamSchedule={this.props.teamSchedule} team_name={this.props.team_name} year = {this.props.year} startDate = {this.props.startDate} endDate = {this.props.endDate} selStartDate = {this.selStartDate} selEndDate = {this.selEndDate} search={this.props.search}/>\r\n      \r\n\t\t\t</>\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    teamSchedule : state.teams.teamSchedule,\r\n    league_name : state.leagues.league.name,\r\n    league_id : state.leagues.league.id,\r\n    team_name : state.teams.team.name,\r\n    team_id : state.teams.team.id,\r\n    year:state.year,\r\n    startDate: state.period.startDate,\r\n    endDate: state.period.endDate,\r\n    search:state.search\r\n})\r\n\r\nexport default compose(connect(mapStateToProps,{setTeamSchedule}),\r\n               connect(mapStateToProps,{setLeagueCreator}),\r\n               connect(mapStateToProps,{setStartDatePeriod}),\r\n               connect(mapStateToProps,{setEndDatePeriod}),\r\n               withRouter\r\n)(TeamScheduleContainer); \r\n\r\n//league_name={this.props.league_name}setStartDateTeamSchedule"]},"metadata":{},"sourceType":"module"}
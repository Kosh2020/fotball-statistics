{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Leagues\\\\Leagues.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport s from './Leagues.module.css';\nimport League from './League/League';\nconst TITLE = 'Список лиг';\n\nconst Leagues = props => {\n  _s();\n\n  const [leagues, setLeagues] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\n    fetch(\"https://apiv2.apifootball.com/?action=get_leagues&APIkey=\" + API_KEY).then(res => res.json()).then(json => {\n      setLoaded(true);\n      setLeagues(json);\n    }, error => {\n      setLoaded(true);\n      setError(error);\n    }).catch(error => console.log('parsing failed', error));\n  }, []); //let Data=props.Data;\n\n  const Data = leagues;\n\n  const ListLeagues = () => {\n    ListLeagues = leagues.map(item => /*#__PURE__*/React.createElement(League, {\n      league_id: item.league_id,\n      league_name: item.league_name,\n      period: props.period,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }\n    }));\n    /*\tif (leagues.error == undefined) {\r\n    \t\tLeagues=leagues.map(item => ( \r\n                 < League league_id={ item.league_id } league_name={ item.league_name } period={ props.period }/> ))\r\n        }\r\n        else{ \r\n        \tLeagues=<div>Данных нет</div>\r\n        }\r\n        return Leagues;\r\n    }\r\n    \r\n    if (error) {\r\n          return <div>Error: {error.message}</div>;\r\n        } else if (!loaded) {\r\n          return <div>Loading...</div>;\r\n        } else {\r\n    */\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, TITLE), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, props.period), /*#__PURE__*/React.createElement(\"div\", {\n      className: s.list_items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"ListLeagues\")); //return      \n  };\n};\n\n_s(Leagues, \"hUxGKn/YKCyjRAGzMwIwGa/Jpw8=\");\n\n_c = Leagues;\nexport default Leagues;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leagues\");","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Leagues/Leagues.js"],"names":["React","useState","useEffect","s","League","TITLE","Leagues","props","leagues","setLeagues","loaded","setLoaded","error","setError","API_KEY","process","env","REACT_APP_USER_TOKEN","fetch","then","res","json","catch","console","log","Data","ListLeagues","map","item","league_id","league_name","period","list_items"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAQC,MAAR,MAAqB,iBAArB;AAIA,MAAMC,KAAK,GAAG,YAAd;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAK;AACdS,IAAAA,SAAS,CAAC,KAAD,CAAT;AACA,QAAIG,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA1B;AACAC,IAAAA,KAAK,CAAC,8DAA4DJ,OAA7D,CAAL,CACCK,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGCE,IAAI,IAAI;AACNV,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,MAAAA,UAAU,CAACY,IAAD,CAAV;AACD,KANF,EAOET,KAAD,IAAU;AACRD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACME,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACP,KAVF,EAYCU,KAZD,CAYOV,KAAK,IAAIW,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BZ,KAA9B,CAZhB;AAaA,GAhBQ,EAgBP,EAhBO,CAAT,CAN2B,CAyB3B;;AACA,QAAMa,IAAI,GAACjB,OAAX;;AAGA,QAAMkB,WAAW,GAAG,MAAM;AAC1BA,IAAAA,WAAW,GAAClB,OAAO,CAACmB,GAAR,CAAYC,IAAI,iBACf,oBAAE,MAAF;AAAS,MAAA,SAAS,EAAGA,IAAI,CAACC,SAA1B;AAAsC,MAAA,WAAW,EAAGD,IAAI,CAACE,WAAzD;AAAuE,MAAA,MAAM,EAAGvB,KAAK,CAACwB,MAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAAZ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM1B,KAAN,CADH,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAME,KAAK,CAACwB,MAAZ,CAHH,eAIG;AAAK,MAAA,SAAS,EAAG5B,CAAC,CAAC6B,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJH,CAAR,CAnByB,CA2BvB;AACF,GA5BD;AA4BE,CAzDF;;GAAM1B,O;;KAAAA,O;AA2DN,eAAeA,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport s from './Leagues.module.css';\r\nimport  League  from './League/League';\r\n\r\n\r\n\r\nconst TITLE = 'Список лиг';\r\n\r\n\r\nconst Leagues = (props) => {\r\nconst [leagues, setLeagues] = useState([]);\r\nconst [loaded, setLoaded] = useState(false);\r\nconst [error, setError] = useState(null);\r\n\r\n\r\nuseEffect(() =>{\r\n\tsetLoaded(false);\r\n\tlet API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n\tfetch(\"https://apiv2.apifootball.com/?action=get_leagues&APIkey=\"+API_KEY)\r\n\t.then(res => res.json())\r\n\t.then(\r\n\t\tjson => {\r\n\t\t  setLoaded(true);\r\n\t\t  setLeagues(json);\r\n\t\t},\r\n\t\t(error) =>{\r\n\t\t  setLoaded(true);\t\r\n          setError(error);\r\n\t\t}\r\n\t)\r\n\t.catch(error => console.log('parsing failed', error))\r\n},[])\r\n\r\n\r\n//let Data=props.Data;\r\nconst Data=leagues;\r\n\r\n\r\nconst ListLeagues = () => {\r\nListLeagues=leagues.map(item => ( \r\n             < League league_id={ item.league_id } league_name={ item.league_name } period={ props.period }/> ))\r\n/*\tif (leagues.error == undefined) {\r\n\t\tLeagues=leagues.map(item => ( \r\n             < League league_id={ item.league_id } league_name={ item.league_name } period={ props.period }/> ))\r\n    }\r\n    else{ \r\n    \tLeagues=<div>Данных нет</div>\r\n    }\r\n    return Leagues;\r\n}\r\n\r\nif (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!loaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n*/\r\n\treturn( <div >\r\n            <h2>{ TITLE }</h2>\r\n\r\n            <h2>{ props.period }</h2>\r\n            <div className={ s.list_items }>         \r\n                ListLeagues\r\n            </div>\r\n        </div>\r\n  )//return      \r\n}}\r\n\r\nexport default Leagues;"]},"metadata":{},"sourceType":"module"}
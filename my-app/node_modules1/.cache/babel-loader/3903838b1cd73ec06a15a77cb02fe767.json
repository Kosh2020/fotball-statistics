{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Leagues\\\\LeagueSchedule\\\\LeagueSchedule.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nconst TITLE = 'Расписание лиги Championship';\n\nconst LeagueSchedule = props => {\n  _s();\n\n  const [leaguesSchedule, setLeaguesSchedule] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [search, setSearch] = useState('');\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\n  useEffect(() => {\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\n    let league_id = props.match.params.league_id;\n    setLoaded(false);\n    fetch(\"https://apiv2.apifootball.com/?action=get_events&from=2019-04-01&to=2019-04-03&league_id=\" + league_id + \"&APIkey=\" + API_KEY).then(res => res.json()).then(json => {\n      setLoaded(true);\n      setLeaguesSchedule(json);\n    }, error => {\n      setLoaded(true);\n      setError(error);\n    }).catch(error => console.log('parsing failed', error));\n  }, []);\n  let Data = props.Data; //const Data=leaguesSchedule;\n\n  useEffect(() => {\n    setFilteredDataLeagues(Data.filter(leaguesSchedule => {\n      return (leaguesSchedule.match_awayteam_name + leaguesSchedule.match_awayteam_name).toLowerCase().includes(search.toLowerCase());\n    }));\n  }, [search]);\n  const ll = filteredDataLeagues.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.match_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \"\\u0414\\u0430\\u0442\\u0430:\", item.match_date, \" \", item.match_time, \"       (\\u0414\\u043E\\u043C:\", item.match_hometeam_name, \")   :   (\\u0413\\u043E\\u0441\\u0442\\u044C:\", item.match_awayteam_name, \")\"));\n  console.log(\"kkk\" + leaguesSchedule);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, TITLE), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u044B\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, ll));\n};\n\n_s(LeagueSchedule, \"M3z38AOoru+v0SeSz+2kz8EtxSk=\");\n\n_c = LeagueSchedule;\nexport default _c2 = withRouter(LeagueSchedule);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LeagueSchedule\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Leagues/LeagueSchedule/LeagueSchedule.js"],"names":["React","useState","useEffect","withRouter","TITLE","LeagueSchedule","props","leaguesSchedule","setLeaguesSchedule","loaded","setLoaded","error","setError","search","setSearch","filteredDataLeagues","setFilteredDataLeagues","API_KEY","process","env","REACT_APP_USER_TOKEN","league_id","match","params","fetch","then","res","json","catch","console","log","Data","filter","match_awayteam_name","toLowerCase","includes","ll","map","item","match_id","match_date","match_time","match_hometeam_name","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst TITLE = 'Расписание лиги Championship'\r\n\r\nconst LeagueSchedule = (props) => {\r\n  const [leaguesSchedule, setLeaguesSchedule] = useState([]);\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\r\n\r\n  useEffect(() =>{\r\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    let league_id = props.match.params.league_id;\r\n    setLoaded(false);\r\n    fetch(\"https://apiv2.apifootball.com/?action=get_events&from=2019-04-01&to=2019-04-03&league_id=\"+league_id+\"&APIkey=\"+API_KEY)\r\n    .then(res => res.json())\r\n    .then(\r\n      json => {\r\n        setLoaded(true);\r\n        setLeaguesSchedule(json);\r\n      },\r\n      (error) =>{\r\n        setLoaded(true);  \r\n        setError(error);\r\n      }\r\n    )\r\n    .catch(error => console.log('parsing failed', error))\r\n  },[])\r\n\r\n  let Data=props.Data;\r\n  //const Data=leaguesSchedule;\r\n\r\n  useEffect( () =>{\r\n    setFilteredDataLeagues(\r\n      Data.filter( leaguesSchedule => {\r\n        return (leaguesSchedule.match_awayteam_name+leaguesSchedule.match_awayteam_name).toLowerCase().includes(search.toLowerCase())\r\n      })\r\n      )\r\n  },[search])\r\n\r\n  \r\n\r\n  const ll=filteredDataLeagues.map(item => (  \r\n    <li key={item.match_id}>Дата:{item.match_date} {item.match_time}       (Дом:{item.match_hometeam_name})   :   (Гость:{item.match_awayteam_name})\r\n    </li> \r\n  ))\r\n\r\n  console.log(\"kkk\"+leaguesSchedule);\r\n\treturn ( \r\n    <div className=\"content\">\r\n      <h1>{TITLE}</h1>\r\n      <input type=\"text\" placeholder=\"Название команды\" onChange={ e => setSearch(e.target.value)} />\r\n        <ul>    \r\n          {ll}\r\n        </ul>\r\n    </div>\r\n\t)  \r\n}\r\n\r\nexport default withRouter(LeagueSchedule);"]},"metadata":{},"sourceType":"module"}
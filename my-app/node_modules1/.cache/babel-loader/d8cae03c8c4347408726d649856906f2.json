{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Leagues\\\\LeagueSchedule\\\\LeagueSchedule.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nconst TITLE = 'Расписание лиги Championship';\n\nconst LeagueSchedule = props => {\n  _s();\n\n  const [leaguesSchedule, setLeaguesSchedule] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [search, setSearch] = useState('');\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\n  useEffect(() => {\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\n    let league_id = props.match.params.league_id;\n    let period = props.period;\n    console.log(\"https://api.football-data.org/v2/competitions/\" + league_id + \"/matches?season=\" + period);\n    setLoaded(false);\n    const apiUrl = \"https://api.football-data.org/v2/competitions/\" + league_id + \"/matches?season=\" + period;\n    fetch(apiUrl, {\n      method: 'GET',\n      headers: {\n        'X-Auth-Token': API_KEY\n      }\n    }).then(res => res.json()).then(json => {\n      setLoaded(true);\n      setLeaguesSchedule(json);\n    }, error => {\n      setLoaded(true);\n      setError(error);\n    }).catch(error => console.log('parsing failed', error));\n  }, []);\n  let Data = props.Data; //let Data=leaguesSchedule.matches;\n\n  console.log(Data);\n  useEffect(() => {\n    if (Data !== undefined) {\n      setFilteredDataLeagues(Data.filter(leaguesSchedule => {\n        return (leaguesSchedule.homeTeam.name + leaguesSchedule.awayTeam.name).toLowerCase().includes(search.toLowerCase());\n      }));\n    } else setFilteredDataLeagues(null);\n  }, [search]);\n  let listItems = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\");\n\n  if (filteredDataLeagues !== null) {\n    listItems = filteredDataLeagues.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }\n    }, \"\\\"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430:\\\"+\", item.season.startDate, \"+\\\"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F:\\\"+\", item.season.startDate, \"+\\\"   \\\"+\\\"\\u0414\\u043E\\u043C\\u0430\\u0448\\u043D\\u044F\\u044F \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430:\\\"+\", item.homeTeam.name, \"+\\\"\\u0413\\u043E\\u0441\\u0442\\u044C:\\\"+\", item.awayTeam.name, \")))\"));\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }\n    }, \"Error: \", error.message);\n  } else if (!loaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, TITLE), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u044B\",\n      onChange: e => setSearch(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, listItems));\n  }\n};\n\n_s(LeagueSchedule, \"M3z38AOoru+v0SeSz+2kz8EtxSk=\");\n\n_c = LeagueSchedule;\nexport default _c2 = withRouter(LeagueSchedule);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LeagueSchedule\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Leagues/LeagueSchedule/LeagueSchedule.js"],"names":["React","useState","useEffect","withRouter","TITLE","LeagueSchedule","props","leaguesSchedule","setLeaguesSchedule","loaded","setLoaded","error","setError","search","setSearch","filteredDataLeagues","setFilteredDataLeagues","API_KEY","process","env","REACT_APP_USER_TOKEN","league_id","match","params","period","console","log","apiUrl","fetch","method","headers","then","res","json","catch","Data","undefined","filter","homeTeam","name","awayTeam","toLowerCase","includes","listItems","map","item","id","season","startDate","message","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst TITLE = 'Расписание лиги Championship'\r\n\r\nconst LeagueSchedule = (props) => {\r\n  const [leaguesSchedule, setLeaguesSchedule] = useState([]);\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\r\n\r\n  useEffect(() =>{\r\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    let league_id = props.match.params.league_id;\r\n    let period = props.period;\r\n    console.log(\"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+period);\r\n    setLoaded(false);\r\n    const apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+period;\r\n    fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n         'X-Auth-Token': API_KEY\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(\r\n      json => {\r\n        setLoaded(true);\r\n        setLeaguesSchedule(json);\r\n      },\r\n      (error) =>{\r\n        setLoaded(true);  \r\n        setError(error);\r\n      }\r\n    )\r\n    .catch(error => console.log('parsing failed', error))\r\n  },[])\r\n\r\n   let Data=props.Data;\r\n  //let Data=leaguesSchedule.matches;\r\nconsole.log(Data)\r\n\r\n  useEffect( () =>{\r\n    if (Data !== undefined){\r\n    setFilteredDataLeagues(\r\n      Data.filter( leaguesSchedule => {\r\n        return (leaguesSchedule.homeTeam.name+leaguesSchedule.awayTeam.name).toLowerCase().includes(search.toLowerCase())\r\n      })\r\n      )}\r\n    else setFilteredDataLeagues(null)\r\n  },[search])\r\n\r\n \r\n\r\n  let listItems=<div>Нет данных</div> \r\n  if (filteredDataLeagues !== null ){\r\n     listItems=filteredDataLeagues.map(item => (  \r\n     <li key={item.id}>\"Дата начала:\"+{item.season.startDate}+\"Дата окончания:\"+{item.season.startDate}+\"   \"+\"Домашняя группа:\"+{item.homeTeam.name}+\"Гость:\"+{item.awayTeam.name})))\r\n     </li> \r\n  ))\r\n  }\r\n\r\n if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n  } \r\n  else if (!loaded) {\r\n      return <div>Loading...</div>;\r\n  } \r\n  else {\r\n\r\n\treturn ( \r\n    <div className=\"content\">\r\n      <h1>{TITLE}</h1>\r\n      <input type=\"text\" placeholder=\"Название команды\" onChange={ e => setSearch(e.target.value)} />\r\n        <ul>    \r\n          {listItems}\r\n        </ul>\r\n    </div>\r\n\t) \r\n}\r\n}\r\n\r\nexport default withRouter(LeagueSchedule);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Teams\\\\Teams.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport s from './Teams.module.css';\nimport Search from '../common/Search/Search';\nimport Team from './Team/Team';\n\nconst Teams = props => {\n  const TITLE = 'Команды лиги Championship   ' + props.period + ' год';\n  ;\n  /* const [loaded, setLoaded] = useState(false);\r\n   const [error, setError] = useState(null);\r\n  \n  \n  /*  useEffect(() =>{\r\n     let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n     let league_id = props.match.params.league_id;\r\n     setLoaded(false);\r\n     //console.log(\"error1111\");\r\n     fetch(\"https://apiv2.apifootball.com/?action=get_teams&league_id=\"+league_id+\"&APIkey=\"+API_KEY)\r\n       .then(res => res.json())\r\n       .then(\r\n         json => {\r\n           setLoaded(true);\r\n           setTeams(json);\r\n         },\r\n         (error) =>{\r\n           setLoaded(true);  \r\n           setError(error);\r\n         }\r\n       )\r\n       .catch(error => console.log('parsing failed', error))\r\n   },[])*/\n\n  let Data = null;\n\n  if (props.Teams != null) {\n    let Data = props.Teams;\n  } //const Data=teams;\n\n\n  let filteredDataLeagues = null;\n\n  if (Data !== null) {\n    filteredDataLeagues = Data.filter(team => {\n      return team.team_name.toLowerCase().includes(props.search.toLowerCase());\n    });\n  }\n\n  const ListTeams = () => {\n    let result;\n    /* if (teams.error == undefined) { */\n\n    result = filteredDataLeagues.map(item => /*#__PURE__*/React.createElement(Team, {\n      team_id: item.team_key,\n      team_name: item.team_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n    /* }\r\n     else{ \r\n       result=<div>Данных нет</div>\r\n     }*/\n\n    return result;\n  }; //console.log(\"Teams\");\n  //console.log(\"loaded\"+loaded);\n  //console.log(\"error\"+error);\n\n  /*  if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } \r\n    else if (!loaded) {\r\n        return <div>Loading...</div>;\r\n    } \r\n    else {*/\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    dispatch: props.dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, TITLE), /*#__PURE__*/React.createElement(ListTeams, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))); //}\n};\n\nexport default withRouter(Teams);","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Teams/Teams.js"],"names":["React","useState","useEffect","withRouter","s","Search","Team","Teams","props","TITLE","period","Data","filteredDataLeagues","filter","team","team_name","toLowerCase","includes","search","ListTeams","result","map","item","team_key","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAQC,MAAR,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAkB,aAAlB;;AAIA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAMC,KAAK,GAAG,iCAA+BD,KAAK,CAACE,MAArC,GAA6C,MAA3D;AAAkE;AACnE;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,MAAIC,IAAI,GAAC,IAAT;;AACA,MAAIH,KAAK,CAACD,KAAN,IAAe,IAAnB,EAAwB;AACxB,QAAII,IAAI,GAACH,KAAK,CAACD,KAAf;AAAsB,GA5BC,CA6BvB;;;AAEA,MAAIK,mBAAmB,GAAG,IAA1B;;AAEA,MAAID,IAAI,KAAK,IAAb,EAAkB;AAChBC,IAAAA,mBAAmB,GAAGD,IAAI,CAACE,MAAL,CAAaC,IAAI,IAAI;AACvC,aAAOA,IAAI,CAACC,SAAL,CAAeC,WAAf,GAA6BC,QAA7B,CAAsCT,KAAK,CAACU,MAAN,CAAaF,WAAb,EAAtC,CAAP;AAAyE,KADvD,CAAtB;AAED;;AAED,QAAMG,SAAS,GAAG,MAAM;AACtB,QAAIC,MAAJ;AACD;;AACGA,IAAAA,MAAM,GAACR,mBAAmB,CAACS,GAApB,CAAwBC,IAAI,iBACjC,oBAAE,IAAF;AAAO,MAAA,OAAO,EAAEA,IAAI,CAACC,QAArB;AAA+B,MAAA,SAAS,EAAED,IAAI,CAACP,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAP;AAEH;AACH;AACA;AACA;;AACI,WAAOK,MAAP;AACD,GAVD,CAtCuB,CAkDzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACG,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEZ,KAAK,CAACgB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,KAAL,CADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFH,CADF,CA7DsB,CAqExB;AACA,CAtED;;AAwEA,eAAeN,UAAU,CAACI,KAAD,CAAzB","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport s from './Teams.module.css';\r\nimport  Search  from '../common/Search/Search';\r\nimport Team  from './Team/Team';\r\n \r\n\r\n\r\nconst Teams = (props) => {\r\n  const TITLE = 'Команды лиги Championship   '+props.period +' год';;\r\n /* const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n/*  useEffect(() =>{\r\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    let league_id = props.match.params.league_id;\r\n    setLoaded(false);\r\n    //console.log(\"error1111\");\r\n    fetch(\"https://apiv2.apifootball.com/?action=get_teams&league_id=\"+league_id+\"&APIkey=\"+API_KEY)\r\n      .then(res => res.json())\r\n      .then(\r\n        json => {\r\n          setLoaded(true);\r\n          setTeams(json);\r\n        },\r\n        (error) =>{\r\n          setLoaded(true);  \r\n          setError(error);\r\n        }\r\n      )\r\n      .catch(error => console.log('parsing failed', error))\r\n  },[])*/\r\n\r\n  let Data=null;\r\n  if (props.Teams != null){\r\n  let Data=props.Teams;}\r\n  //const Data=teams;\r\n\r\n  let filteredDataLeagues = null;\r\n\r\n  if (Data !== null){ \r\n    filteredDataLeagues = Data.filter( team => {\r\n        return team.team_name.toLowerCase().includes(props.search.toLowerCase())})\r\n  }\r\n\r\n  const ListTeams = () => {\r\n    let result\r\n   /* if (teams.error == undefined) { */\r\n      result=filteredDataLeagues.map(item => ( \r\n        < Team team_id={item.team_key} team_name={item.team_name}/> ));\r\n   /* }\r\n    else{ \r\n      result=<div>Данных нет</div>\r\n    }*/\r\n    return result;\r\n  }\r\n\r\n//console.log(\"Teams\");\r\n//console.log(\"loaded\"+loaded);\r\n//console.log(\"error\"+error);\r\n\r\n/*  if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n  } \r\n  else if (!loaded) {\r\n      return <div>Loading...</div>;\r\n  } \r\n  else {*/\r\n\t  return(\r\n\t    <div >\r\n       <Search dispatch={props.dispatch}/> \r\n        <ul>\r\n          <h2>{TITLE}</h2>\r\n          <ListTeams/>\r\n        </ul>\r\n      </div>)\r\n\t//}\r\n}\r\n\r\nexport default withRouter(Teams);"]},"metadata":{},"sourceType":"module"}
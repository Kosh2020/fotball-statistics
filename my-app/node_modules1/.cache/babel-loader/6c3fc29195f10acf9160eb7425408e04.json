{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Teams\\\\TeamSchedule\\\\TeamSchedule.js\";\nimport { withRouter } from 'react-router-dom';\nimport DatePicker from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport s from './TeamSchedule.module.css';\n\nconst TeamSchedule = props => {\n  const TITLE1 = 'Лига \"' + props.league_name + '\" ' + props.period + ' год';\n  const TITLE2 = 'Расписание команды \"' + props.team_name + '\"';\n  /*  const [startDate, setStartDate] = useState(new Date(\"2019-01-08\"));\r\n    const [endDate, setEndDate] = useState(new Date(\"2019-12-10\"));\r\n   /* const [loaded, setLoaded] = useState(false);\r\n    const [error, setError] = useState(null);\r\n  \r\n    useEffect(() =>{\r\n    setLoaded(false);\r\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    let team_id = props.match.params.team_id;\r\n    const apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/teams?season=\"+period;\r\n    fetch(apiUrl, {\r\n            method: 'GET',\r\n            headers: {\r\n              'X-Auth-Token': API_KEY\r\n            }\r\n        })\r\n    https://api.football-data.org/v2/competitions/PL/teams?season=2019\r\n    fetch(\"https://api.football-data.org/v2/competitions/)\r\n    .then(res => res.json())\r\n    .then(\r\n      json => {\r\n        setLoaded(true);\r\n        setTeamSchedule(json);\r\n      },\r\n      (error) =>{\r\n        setLoaded(true);  \r\n            setError(error);\r\n      }\r\n    )\r\n    .catch(error => console.log('parsing failed', error))\r\n    },[])\r\n  */\n\n  let Data = null;\n\n  if (props.teamSchedule.listSchedule !== null & props.teamSchedule.listSchedule !== undefined) {\n    Data = props.teamSchedule.listSchedule;\n  } //const Data=teams;\n\n\n  let filteredDataTeams = null;\n\n  if (Data !== null & Data !== undefined) {\n    filteredDataTeams = Data.filter(teamSchedule => {\n      return (teamSchedule.awayTeam.name + teamSchedule.homeTeam.name + teamSchedule.utcDate).toLowerCase().includes(props.search.toLowerCase());\n    });\n  }\n\n  let listItem = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 14\n    }\n  }, \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\");\n\n  if (filteredDataTeams !== null & filteredDataTeams !== undefined) {\n    listItem = filteredDataTeams.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item.competition.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, \"\\u0414\\u0430\\u0442\\u0430:\", item.utcDate, \" \\u0414\\u043E\\u043C\\u0430\\u0448\\u043D\\u044F\\u044F \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430: \", item.homeTeam.name, \"  (\\u0413\\u043E\\u0441\\u0442\\u044C:\", item.awayTeam.name, \") \"));\n  }\n  /*let setStartDate = () => {console.log(\"StartDate\")}\r\n  let setEndDate = () => {console.log(\"EndDate\")}\r\n  let startDate = () => {console.log(\"StartDate\")}\r\n  let endDate = () => {console.log(\"EndDate\")}*/\n\n\n  let setStartDate = date => {\n    props.selStartDate(date);\n  };\n\n  let setEndDate = date => {\n    props.selEndDate(date);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, TITLE1), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, TITLE2), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MyDateFilter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Start Date:\"), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: props.startDate,\n    onChange: date => setStartDate(date),\n    selectsStart: true,\n    startDate: props.startDate,\n    endDate: props.endDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: props.endDate,\n    onChange: date => setEndDate(date),\n    selectsEnd: true,\n    startDate: props.startDate,\n    endDate: props.endDate,\n    minDate: props.startDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  })), listItem));\n};\n\nexport default withRouter(TeamSchedule);","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Teams/TeamSchedule/TeamSchedule.js"],"names":["withRouter","DatePicker","s","TeamSchedule","props","TITLE1","league_name","period","TITLE2","team_name","Data","teamSchedule","listSchedule","undefined","filteredDataTeams","filter","awayTeam","name","homeTeam","utcDate","toLowerCase","includes","search","listItem","map","item","competition","id","setStartDate","date","selStartDate","setEndDate","selEndDate","startDate","endDate"],"mappings":"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","sourcesContent":["import { withRouter } from 'react-router-dom';\r\nimport DatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport s from './TeamSchedule.module.css';\r\n\r\n\r\n const TeamSchedule = (props) => {\r\n  const TITLE1 = 'Лига \"'+props.league_name+'\" '+props.period +' год';\r\n  const TITLE2 = 'Расписание команды \"'+props.team_name+'\"';\r\n/*  const [startDate, setStartDate] = useState(new Date(\"2019-01-08\"));\r\n  const [endDate, setEndDate] = useState(new Date(\"2019-12-10\"));\r\n /* const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() =>{\r\n  setLoaded(false);\r\n  let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n  let team_id = props.match.params.team_id;\r\n  const apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/teams?season=\"+period;\r\n  fetch(apiUrl, {\r\n          method: 'GET',\r\n          headers: {\r\n            'X-Auth-Token': API_KEY\r\n          }\r\n      })\r\n  https://api.football-data.org/v2/competitions/PL/teams?season=2019\r\n  fetch(\"https://api.football-data.org/v2/competitions/)\r\n  .then(res => res.json())\r\n  .then(\r\n    json => {\r\n      setLoaded(true);\r\n      setTeamSchedule(json);\r\n    },\r\n    (error) =>{\r\n      setLoaded(true);  \r\n          setError(error);\r\n    }\r\n  )\r\n  .catch(error => console.log('parsing failed', error))\r\n  },[])\r\n*/\r\n  let Data=null;\r\n  if ((props.teamSchedule.listSchedule !== null)&(props.teamSchedule.listSchedule !== undefined)){\r\n    Data=props.teamSchedule.listSchedule\r\n  }\r\n  //const Data=teams;\r\n\r\nlet filteredDataTeams = null;\r\n\r\nif ((Data !== null)&(Data !== undefined)){ \r\n   filteredDataTeams = Data.filter( teamSchedule => {\r\n      return (teamSchedule.awayTeam.name+teamSchedule.homeTeam.name+teamSchedule.utcDate).toLowerCase().includes(props.search.toLowerCase())\r\n   }\r\n   )\r\n}\r\n    \r\nlet listItem=<div>Нет данных</div> \r\n\r\nif ((filteredDataTeams !== null )&(filteredDataTeams !== undefined)){\r\n   listItem=filteredDataTeams.map(item => (\r\n    <li key={item.competition.id}>Дата:{item.utcDate} Домашняя группа: {item.homeTeam.name}  (Гость:{item.awayTeam.name}) </li> ))\r\n}    \r\n\r\n/*let setStartDate = () => {console.log(\"StartDate\")}\r\nlet setEndDate = () => {console.log(\"EndDate\")}\r\nlet startDate = () => {console.log(\"StartDate\")}\r\nlet endDate = () => {console.log(\"EndDate\")}*/\r\nlet setStartDate = (date) => {\r\n   props.selStartDate(date);\r\n  }\r\n\r\nlet setEndDate = (date) => {\r\n   props.selEndDate(date);\r\n  }\r\n\r\nreturn (\r\n\t<div > \r\n      <ul>\r\n       \t<h2>{TITLE1}</h2>\r\n        <h2>{TITLE2}</h2>\r\n    <div className=\"MyDateFilter\">\r\n      <span>Start Date:</span>\r\n      <DatePicker\r\n        selected={props.startDate}\r\n        onChange={date => setStartDate(date)}\r\n        selectsStart\r\n        startDate={props.startDate}\r\n        endDate={props.endDate}\r\n      />\r\n      <DatePicker\r\n        selected={props.endDate}\r\n        onChange={date => setEndDate(date)}\r\n        selectsEnd\r\n        startDate={props.startDate}\r\n        endDate={props.endDate}\r\n        minDate={props.startDate}\r\n      />\r\n\r\n    </div>\r\n         \t{listItem}\r\n      </ul>\r\n  </div>\r\n)\r\n}\r\n\r\nexport default withRouter(TeamSchedule);\r\n"]},"metadata":{},"sourceType":"module"}
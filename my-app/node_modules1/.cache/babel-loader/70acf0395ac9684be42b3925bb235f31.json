{"ast":null,"code":"let rerenderEntireTree = () => {\n  console.log('State changed');\n};\n\nexport let LEAGUES = [{\n  id: 1,\n  leagueCode: 'BL1',\n  leagueNmae: '1. Bundesliga'\n}, {\n  id: 2,\n  leagueCode: 'BL2',\n  leagueNmae: '2. Bundesliga'\n}, {\n  id: 3,\n  leagueCode: 'BL3',\n  leagueNmae: '3. Bundesliga'\n}, {\n  id: 4,\n  leagueCode: 'DFB',\n  leagueNmae: 'Dfb-Cup'\n}, {\n  id: 5,\n  leagueCode: 'PL',\n  leagueNmae: 'Premiere League'\n}, {\n  id: 6,\n  leagueCode: 'EL1',\n  leagueNmae: 'League One'\n}, {\n  id: 7,\n  leagueCode: 'ELC',\n  leagueNmae: 'Championship'\n}, {\n  id: 8,\n  leagueCode: 'FAC',\n  leagueNmae: 'FA-Cup'\n}, {\n  id: 9,\n  leagueCode: 'SA',\n  leagueNmae: 'Serie A'\n}, {\n  id: 10,\n  leagueCode: 'SB',\n  leagueNmae: 'Serie B'\n}, {\n  id: 11,\n  leagueCode: 'PD',\n  leagueNmae: 'Primera Division'\n}, {\n  id: 12,\n  leagueCode: 'SD',\n  leagueNmae: 'Segunda Division'\n}, {\n  id: 13,\n  leagueCode: 'CDR',\n  leagueNmae: 'Copa del Rey'\n}, {\n  id: 14,\n  leagueCode: 'FL1',\n  leagueNmae: 'Ligue 1'\n}, {\n  id: 15,\n  leagueCode: 'FL2',\n  leagueNmae: 'Ligue 2'\n}, {\n  id: 16,\n  leagueCode: 'DED',\n  leagueNmae: 'Eredivisie'\n}, {\n  id: 17,\n  leagueCode: 'PPL',\n  leagueNmae: 'Primeira Liga'\n}, {\n  id: 18,\n  leagueCode: 'GSL',\n  leagueNmae: 'Super League'\n}, {\n  id: 19,\n  leagueCode: 'CL',\n  leagueNmae: 'Champions-League'\n}, {\n  id: 20,\n  leagueCode: 'EL',\n  leagueNmae: 'UEFA-Cup'\n}, {\n  id: 21,\n  leagueCode: 'EC',\n  leagueNmae: 'European-Cup of Nations'\n}, {\n  id: 22,\n  leagueCode: 'WC',\n  leagueNmae: 'World-Cup'\n}];\nlet state = {\n  period: '2021',\n  league: 1\n};\nwindow.state = state;\nexport let setPeriod = period => {\n  state.period = period;\n  rerenderEntireTree(state);\n};\nexport const subscribe = observer => {\n  rerenderEntireTree = observer;\n};\nexport default state;","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/state.js"],"names":["rerenderEntireTree","console","log","LEAGUES","id","leagueCode","leagueNmae","state","period","league","window","setPeriod","subscribe","observer"],"mappings":"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","sourcesContent":["let rerenderEntireTree = () => {\n\tconsole.log('State changed');\n}\n\nexport let LEAGUES = [\n    { id: 1, leagueCode: 'BL1', leagueNmae: '1. Bundesliga'},\n\t{ id: 2,leagueCode: 'BL2', leagueNmae: '2. Bundesliga'},\n\t{ id: 3,leagueCode: 'BL3', leagueNmae: '3. Bundesliga'},\n\t{ id: 4,leagueCode: 'DFB', leagueNmae: 'Dfb-Cup'},\n\t{ id: 5,leagueCode: 'PL',  leagueNmae: 'Premiere League'},    \n\t{ id: 6,leagueCode: 'EL1', leagueNmae: 'League One'},\n\t{ id: 7,leagueCode: 'ELC', leagueNmae: 'Championship'},\n\t{ id: 8,leagueCode: 'FAC', leagueNmae: 'FA-Cup'},\n\t{ id: 9,leagueCode: 'SA',  leagueNmae: 'Serie A'},\n\t{ id: 10,leagueCode: 'SB',  leagueNmae: 'Serie B'},\n\t{ id: 11,leagueCode: 'PD',  leagueNmae: 'Primera Division'},\n\t{ id: 12,leagueCode: 'SD',  leagueNmae: 'Segunda Division'},\n\t{ id: 13,leagueCode: 'CDR', leagueNmae: 'Copa del Rey'},\n\t{ id: 14,leagueCode: 'FL1', leagueNmae: 'Ligue 1'},\n\t{ id: 15,leagueCode: 'FL2', leagueNmae: 'Ligue 2'},\n\t{ id: 16,leagueCode: 'DED', leagueNmae: 'Eredivisie'},\n\t{ id: 17,leagueCode: 'PPL', leagueNmae: 'Primeira Liga'},\n\t{ id: 18,leagueCode: 'GSL', leagueNmae: 'Super League'},\n\t{ id: 19,leagueCode: 'CL', leagueNmae: 'Champions-League'},\n\t{ id: 20,leagueCode: 'EL', leagueNmae: 'UEFA-Cup'},\n\t{ id: 21,leagueCode: 'EC', leagueNmae: 'European-Cup of Nations'},\n\t{ id: 22,leagueCode: 'WC', leagueNmae: 'World-Cup'}\n  ];\n\nlet state = {\n  period:'2021',\n  league: 1\n}\n\nwindow.state = state;\n\nexport let setPeriod = (period) => {\n  state.period=period;\n\n  rerenderEntireTree(state);\n}\n\nexport const subscribe = (observer) => {\n\trerenderEntireTree = observer;\n}\n\nexport default state;\n"]},"metadata":{},"sourceType":"module"}
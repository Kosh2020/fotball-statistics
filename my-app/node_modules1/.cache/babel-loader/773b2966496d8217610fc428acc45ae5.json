{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Teams\\\\TeamSchedule\\\\TeamSchedule.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport s from './TeamSchedule.module.css';\nconst TITLE = 'Расписание команды Swansea';\n\nconst TeamSchedule = props => {\n  const [teamSchedule, setTeamSchedule] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [search, setSearch] = useState('');\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\n  useEffect(() => {\n    setLoaded(false);\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\n    let team_id = props.match.params.team_id;\n    fetch(\"https://apiv2.apifootball.com/?action=get_events&from=2020-12-01&to=2021-01-03&team_id=\" + team_id + \"&APIkey=\" + API_KEY).then(res => res.json()).then(json => {\n      setLoaded(true);\n      setTeamSchedule(json);\n    }, error => {\n      setLoaded(true);\n      setError(error);\n    }).catch(error => console.log('parsing failed', error));\n  }, []);\n  let Data = props.Data; //const Data=teams;\n\n  useEffect(() => {\n    setFilteredDataLeagues(Data.filter(teamSchedule => {\n      return (teamSchedule.match_awayteam_name + teamSchedule.match_awayteam_name).toLowerCase().includes(search.toLowerCase());\n    }));\n  }, [search]);\n  console.log(\"teamSchedule\");\n  console.log(\"loaded\" + loaded);\n  console.log(\"error\" + error);\n  const kk = filteredDataLeagues.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.match_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, \"\\u0414\\u0430\\u0442\\u0430:\", item.match_date, \" \", item.match_time, \"       (\\u0413\\u043E\\u0441\\u0442\\u044C:\", item.match_awayteam_name, \")\"));\n  console.log(\"ssss\" + kk);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 14\n    }\n  }, TITLE), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }), kk));\n};\n\nexport default withRouter(TeamSchedule);","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Teams/TeamSchedule/TeamSchedule.js"],"names":["React","useState","useEffect","withRouter","s","TITLE","TeamSchedule","props","teamSchedule","setTeamSchedule","loaded","setLoaded","error","setError","search","setSearch","filteredDataLeagues","setFilteredDataLeagues","API_KEY","process","env","REACT_APP_USER_TOKEN","team_id","match","params","fetch","then","res","json","catch","console","log","Data","filter","match_awayteam_name","toLowerCase","includes","kk","map","item","match_id","match_date","match_time","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport s from './TeamSchedule.module.css';\r\n\r\nconst TITLE = 'Расписание команды Swansea';\r\n \r\nconst TeamSchedule = (props) => {\r\n  const [teamSchedule, setTeamSchedule] = useState([]);\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\r\n\r\n  useEffect(() =>{\r\n  setLoaded(false);\r\n  let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n  let team_id = props.match.params.team_id;\r\n  fetch(\"https://apiv2.apifootball.com/?action=get_events&from=2020-12-01&to=2021-01-03&team_id=\"+team_id+\"&APIkey=\"+API_KEY)\r\n  .then(res => res.json())\r\n  .then(\r\n    json => {\r\n      setLoaded(true);\r\n      setTeamSchedule(json);\r\n    },\r\n    (error) =>{\r\n      setLoaded(true);  \r\n          setError(error);\r\n    }\r\n  )\r\n  .catch(error => console.log('parsing failed', error))\r\n  },[])\r\n\r\n  let Data=props.Data;\r\n  //const Data=teams;\r\n\r\n  useEffect( () =>{\r\n    setFilteredDataLeagues(\r\n      Data.filter( teamSchedule => {\r\n        return (teamSchedule.match_awayteam_name+teamSchedule.match_awayteam_name).toLowerCase().includes(search.toLowerCase())\r\n      })\r\n      )\r\n  },[search])\r\n\r\n\r\nconsole.log(\"teamSchedule\");\r\nconsole.log(\"loaded\"+loaded);\r\nconsole.log(\"error\"+error);\r\n\r\n\r\n\r\nconst kk=filteredDataLeagues.map(item => (  \r\n                  <li key={item.match_id}>Дата:{item.match_date} {item.match_time}       (Гость:{item.match_awayteam_name})\r\n                  </li> ))\r\nconsole.log(\"ssss\"+kk);\r\n\treturn (\r\n\t\t<div >\r\n           <ul>\r\n            \t<h1>{TITLE}</h1>\r\n              <input type=\"text\" placeholder=\"Search\" onChange={ e => setSearch(e.target.value)} />\r\n            \t{kk}\r\n           </ul>\r\n        </div>\r\n\t)\r\n}\r\n\r\nexport default withRouter(TeamSchedule);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Teams\\\\TeamsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Teams from './Teams';\nimport TeamSchedule from './TeamSchedule/TeamSchedule';\nimport { withRouter } from 'react-router-dom';\nimport { setTeamCreator } from \"../../redux/teams-reducer\";\nimport { setListTeamsCreator } from \"../../redux/teams-reducer\";\nimport { setLeagueCreator } from \"../../redux/leagues-reducer\";\nimport { compose } from \"redux\";\nimport Preloader from '../common/Preloader/Preloader';\n\nclass TeamsContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.selTeam = text => {\n      this.props.setTeamCreator(text);\n    };\n  }\n\n  componentDidMount() {\n    let league_id = this.props.match.params.league_id;\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\n    let year = this.props.year;\n    const apiUrl = \"https://api.football-data.org/v2/competitions/\" + league_id + \"/teams?season=\" + year;\n    fetch(apiUrl, {\n      method: 'GET',\n      headers: {\n        'X-Auth-Token': API_KEY\n      }\n    }).then(response => response.json()).then(response => {\n      console.log({\n        matches: response.teams\n      });\n      this.props.setListTeamsCreator(response.teams); //this.setState({isLoaded: true});\n    }).then(error => {\n      this.setState({\n        false: true\n      });\n      this.setState({\n        error\n      });\n    }).catch(error => console.log('parsing failed', error)); //setlistLeaguesCreator(this.props.Data.matches);\n\n    /* action = setLeagueSchedule(this.props.Data.matches);\r\n     this.props.dispatch(action);\r\n    */\n    // setListTeamsCreator(this.props.Data);\n    //const setLeagueCreator = (text) => ({ type: SET_LEAGUE, league:text });\n    //const storeLeagueSchedule = () => {this.props.store.getState().leagues.leagueSchedule};\n    //action = setLeagueSchedule(Data.matches);\n    //this.props.store.dispatch(setLeagueSchedule(leagueScheduleData.matches));  \n  }\n\n  render() {\n    /*if (error) {\r\n        \t\treturn <div>Error: {error.message}</div>;\r\n    \t\t} \r\n    \t\telse if (!loaded) {\r\n        \t\treturn <div>Loading...</div>;\r\n    \t\t} \r\n    \t\telse {*/\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Teams, {\n      teams: this.props.listTeams,\n      league_name: this.props.league_name,\n      year: this.props.year,\n      search: this.props.search,\n      selTeam: this.selTeam,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    })); //}\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  league_name: state.leagues.league.name,\n  listTeams: state.teams.listTeams,\n  year: state.year,\n  search: state.search,\n  isFetching: state.teams.isFetching\n});\n\nexport default compose(connect(mapStateToProps, {\n  setTeamCreator\n}), connect(mapStateToProps, {\n  setListTeamsCreator\n}), connect(mapStateToProps, {\n  setLeagueCreator\n}), withRouter)(TeamsContainer);","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Teams/TeamsContainer.js"],"names":["React","Component","connect","Teams","TeamSchedule","withRouter","setTeamCreator","setListTeamsCreator","setLeagueCreator","compose","Preloader","TeamsContainer","selTeam","text","props","componentDidMount","league_id","match","params","API_KEY","process","env","REACT_APP_USER_TOKEN","year","apiUrl","fetch","method","headers","then","response","json","console","log","matches","teams","error","setState","false","catch","render","isFetching","listTeams","league_name","search","mapStateToProps","state","leagues","league","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Teams from './Teams';\r\nimport TeamSchedule from './TeamSchedule/TeamSchedule';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {setTeamCreator} from \"../../redux/teams-reducer\";\r\nimport {setListTeamsCreator} from \"../../redux/teams-reducer\";\r\nimport {setLeagueCreator} from \"../../redux/leagues-reducer\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nclass TeamsContainer extends React.Component {\r\n\t\r\n\tcomponentDidMount(){\r\n\r\n    let league_id = this.props.match.params.league_id;\r\n\t\tlet API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    \t\r\n    \tlet year = this.props.year;\r\n\r\n     \r\n    \tconst apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/teams?season=\"+year;\r\n\r\n    \tfetch(apiUrl, {\r\n      \t\tmethod: 'GET',\r\n      \t\theaders: {\r\n         \t  'X-Auth-Token': API_KEY\r\n      \t\t}\r\n    \t})\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log({matches:response.teams});\r\n        this.props.setListTeamsCreator(response.teams);\r\n          //this.setState({isLoaded: true});\r\n      })\r\n      .then((error) => {\r\n          this.setState({false: true});\r\n          this.setState({error});\r\n      })    \t\r\n    \t.catch(error => console.log('parsing failed', error))\r\n\r\n   //setlistLeaguesCreator(this.props.Data.matches);\r\n   /* action = setLeagueSchedule(this.props.Data.matches);\r\n    this.props.dispatch(action);\r\n */\r\n // setListTeamsCreator(this.props.Data);\r\n //const setLeagueCreator = (text) => ({ type: SET_LEAGUE, league:text });\r\n //const storeLeagueSchedule = () => {this.props.store.getState().leagues.leagueSchedule};\r\n\r\n    //action = setLeagueSchedule(Data.matches);\r\n    //this.props.store.dispatch(setLeagueSchedule(leagueScheduleData.matches));  \r\n\r\n  \t}\t\r\n\r\n  selTeam = (text) => {\r\n      this.props.setTeamCreator(text);\r\n      }\r\n\r\n\trender() {  \r\n\t\t/*if (error) {\r\n      \t\treturn <div>Error: {error.message}</div>;\r\n  \t\t} \r\n  \t\telse if (!loaded) {\r\n      \t\treturn <div>Loading...</div>;\r\n  \t\t} \r\n  \t\telse {*/\r\n\t\t  return <>\r\n           { this.props.isFetching ? <Preloader />: null} \r\n\t\t\t     <Teams teams = {this.props.listTeams} league_name={this.props.league_name} year={this.props.year} search={this.props.search} selTeam={this.selTeam}/>\r\n\t\t\t</>\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    league_name : state.leagues.league.name,  \r\n    listTeams : state.teams.listTeams,\r\n    year:state.year,\r\n    search:state.search,\r\n    isFetching: state.teams.isFetching\r\n})\r\n\r\nexport default compose(connect(mapStateToProps,{setTeamCreator}),\r\n                       connect(mapStateToProps,{setListTeamsCreator}),\r\n                       connect(mapStateToProps,{setLeagueCreator}),\r\n                       withRouter\r\n)(TeamsContainer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"let rerenderEntireTree = () => {\n  console.log('State changed');\n};\n\nexport const LEAGUES = [{\n  id: 1,\n  leagueCode: 'BL1',\n  leagueName: '1. Bundesliga'\n}, {\n  id: 2,\n  leagueCode: 'BL2',\n  leagueName: '2. Bundesliga'\n}, {\n  id: 3,\n  leagueCode: 'BL3',\n  leagueName: '3. Bundesliga'\n}, {\n  id: 4,\n  leagueCode: 'DFB',\n  leagueName: 'Dfb-Cup'\n}, {\n  id: 5,\n  leagueCode: 'PL',\n  leagueName: 'Premiere League'\n}, {\n  id: 6,\n  leagueCode: 'EL1',\n  leagueName: 'League One'\n}, {\n  id: 7,\n  leagueCode: 'ELC',\n  leagueName: 'Championship'\n}, {\n  id: 8,\n  leagueCode: 'FAC',\n  leagueName: 'FA-Cup'\n}, {\n  id: 9,\n  leagueCode: 'SA',\n  leagueName: 'Serie A'\n}, {\n  id: 10,\n  leagueCode: 'SB',\n  leagueName: 'Serie B'\n}, {\n  id: 11,\n  leagueCode: 'PD',\n  leagueName: 'Primera Division'\n}, {\n  id: 12,\n  leagueCode: 'SD',\n  leagueName: 'Segunda Division'\n}, {\n  id: 13,\n  leagueCode: 'CDR',\n  leagueName: 'Copa del Rey'\n}, {\n  id: 14,\n  leagueCode: 'FL1',\n  leagueName: 'Ligue 1'\n}, {\n  id: 15,\n  leagueCode: 'FL2',\n  leagueName: 'Ligue 2'\n}, {\n  id: 16,\n  leagueCode: 'DED',\n  leagueName: 'Eredivisie'\n}, {\n  id: 17,\n  leagueCode: 'PPL',\n  leagueName: 'Primeira Liga'\n}, {\n  id: 18,\n  leagueCode: 'GSL',\n  leagueName: 'Super League'\n}, {\n  id: 19,\n  leagueCode: 'CL',\n  leagueName: 'Champions-League'\n}, {\n  id: 20,\n  leagueCode: 'EL',\n  leagueName: 'UEFA-Cup'\n}, {\n  id: 21,\n  leagueCode: 'EC',\n  leagueName: 'European-Cup of Nations'\n}, {\n  id: 22,\n  leagueCode: 'WC',\n  leagueName: 'World-Cup'\n}];\nlet state = {\n  period: '2021',\n  league: 1\n};\nwindow.state = state;\nexport let setPeriod = period => {\n  state.period = period;\n  rerenderEntireTree(state);\n};\nexport const subscribe = observer => {\n  rerenderEntireTree = observer;\n};\nexport default state;","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/state.js"],"names":["rerenderEntireTree","console","log","LEAGUES","id","leagueCode","leagueName","state","period","league","window","setPeriod","subscribe","observer"],"mappings":"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","sourcesContent":["let rerenderEntireTree = () => {\n\tconsole.log('State changed');\n}\n\nexport const LEAGUES = [\n    { id: 1, leagueCode: 'BL1', leagueName: '1. Bundesliga'},\n\t{ id: 2,leagueCode: 'BL2', leagueName: '2. Bundesliga'},\n\t{ id: 3,leagueCode: 'BL3', leagueName: '3. Bundesliga'},\n\t{ id: 4,leagueCode: 'DFB', leagueName: 'Dfb-Cup'},\n\t{ id: 5,leagueCode: 'PL',  leagueName: 'Premiere League'},    \n\t{ id: 6,leagueCode: 'EL1', leagueName: 'League One'},\n\t{ id: 7,leagueCode: 'ELC', leagueName: 'Championship'},\n\t{ id: 8,leagueCode: 'FAC', leagueName: 'FA-Cup'},\n\t{ id: 9,leagueCode: 'SA',  leagueName: 'Serie A'},\n\t{ id: 10,leagueCode: 'SB',  leagueName: 'Serie B'},\n\t{ id: 11,leagueCode: 'PD',  leagueName: 'Primera Division'},\n\t{ id: 12,leagueCode: 'SD',  leagueName: 'Segunda Division'},\n\t{ id: 13,leagueCode: 'CDR', leagueName: 'Copa del Rey'},\n\t{ id: 14,leagueCode: 'FL1', leagueName: 'Ligue 1'},\n\t{ id: 15,leagueCode: 'FL2', leagueName: 'Ligue 2'},\n\t{ id: 16,leagueCode: 'DED', leagueName: 'Eredivisie'},\n\t{ id: 17,leagueCode: 'PPL', leagueName: 'Primeira Liga'},\n\t{ id: 18,leagueCode: 'GSL', leagueName: 'Super League'},\n\t{ id: 19,leagueCode: 'CL', leagueName: 'Champions-League'},\n\t{ id: 20,leagueCode: 'EL', leagueName: 'UEFA-Cup'},\n\t{ id: 21,leagueCode: 'EC', leagueName: 'European-Cup of Nations'},\n\t{ id: 22,leagueCode: 'WC', leagueName: 'World-Cup'}\n  ];\n\nlet state = {\n  period:'2021',\n  league: 1\n}\n\nwindow.state = state;\n\nexport let setPeriod = (period) => {\n  state.period=period;\n\n  rerenderEntireTree(state);\n}\n\nexport const subscribe = (observer) => {\n\trerenderEntireTree = observer;\n}\n\nexport default state;\n"]},"metadata":{},"sourceType":"module"}
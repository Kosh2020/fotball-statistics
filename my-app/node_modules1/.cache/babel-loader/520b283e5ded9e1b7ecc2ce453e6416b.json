{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Leagues\\\\LeagueSchedule\\\\LeagueSchedule.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nconst TITLE = 'Расписание лиги Championship';\n\nconst LeagueSchedule = props => {\n  _s();\n\n  const [leaguesSchedule, setLeaguesSchedule] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [search, setSearch] = useState('');\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\n  useEffect(() => {\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\n    let league_id = props.match.params.league_id;\n    let period = props.period;\n    console.log(\"kkk\" + \"https://api.football-data.org/v2/competitions/\" + league_id + \"/teams?season=\" + period);\n    setLoaded(false); //  const apiUrl = \"https://api.football-data.org/v2/competitionss/\"+league_id+\"/teams?season=\"+period;\n\n    const apiUrl = \"https://api.football-data.org/v2/competitions/PL/matches?season=2020\";\n    fetch(apiUrl, {\n      method: 'GET',\n      headers: {\n        'X-Auth-Token': '79c229e5c59445cdb091adf3d2bee52b'\n      }\n    }).then(res => res.json()).then(json => {\n      setLoaded(true);\n      setLeaguesSchedule(json);\n    }, error => {\n      setLoaded(true);\n      setError(error);\n    }).catch(error => console.log('parsing failed', error));\n  }, []);\n  let Data1 = leaguesSchedule.matches;\n  console.log(\"eaguesSchedule\" + Data1);\n  console.log(\"eaguesSchedule\" + Data1.map(item => \"Дата начала:\" + item.season.startDate + \"Дата окончания:\" + item.season.startDate + \"   \" + \"Домашняя группа:\" + item.homeTeam.name + \"Гость:\" + item.homeTeam.name));\n  let Data = props.Data; //const Data=leaguesSchedule;\n\n  useEffect(() => {\n    setFilteredDataLeagues(Data.filter(leaguesSchedule => {\n      return (leaguesSchedule.match_awayteam_name + leaguesSchedule.match_awayteam_name).toLowerCase().includes(search.toLowerCase());\n    }));\n  }, [search]);\n  const ll = filteredDataLeagues.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.match_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, \"\\u0414\\u0430\\u0442\\u0430:\", item.match_date, \" \", item.match_time, \"       (\\u0414\\u043E\\u043C:\", item.match_hometeam_name, \")   :   (\\u0413\\u043E\\u0441\\u0442\\u044C:\", item.match_awayteam_name, \")\"));\n  console.log(\"error\" + error);\n  console.log(\"loaded\" + loaded);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, TITLE), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u044B\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, ll));\n};\n\n_s(LeagueSchedule, \"M3z38AOoru+v0SeSz+2kz8EtxSk=\");\n\n_c = LeagueSchedule;\nexport default _c2 = withRouter(LeagueSchedule);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LeagueSchedule\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Leagues/LeagueSchedule/LeagueSchedule.js"],"names":["React","useState","useEffect","withRouter","TITLE","LeagueSchedule","props","leaguesSchedule","setLeaguesSchedule","loaded","setLoaded","error","setError","search","setSearch","filteredDataLeagues","setFilteredDataLeagues","API_KEY","process","env","REACT_APP_USER_TOKEN","league_id","match","params","period","console","log","apiUrl","fetch","method","headers","then","res","json","catch","Data1","matches","map","item","season","startDate","homeTeam","name","Data","filter","match_awayteam_name","toLowerCase","includes","ll","match_id","match_date","match_time","match_hometeam_name","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst TITLE = 'Расписание лиги Championship'\r\n\r\nconst LeagueSchedule = (props) => {\r\n  const [leaguesSchedule, setLeaguesSchedule] = useState([]);\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\r\n\r\n  useEffect(() =>{\r\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    let league_id = props.match.params.league_id;\r\n    let period = props.period;\r\n    console.log(\"kkk\"+\"https://api.football-data.org/v2/competitions/\"+league_id+\"/teams?season=\"+period);\r\n    setLoaded(false);\r\n  //  const apiUrl = \"https://api.football-data.org/v2/competitionss/\"+league_id+\"/teams?season=\"+period;\r\n    const apiUrl = \"https://api.football-data.org/v2/competitions/PL/matches?season=2020\";\r\n    fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n         'X-Auth-Token': '79c229e5c59445cdb091adf3d2bee52b'\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(\r\n      json => {\r\n        setLoaded(true);\r\n        setLeaguesSchedule(json);\r\n      },\r\n      (error) =>{\r\n        setLoaded(true);  \r\n        setError(error);\r\n      }\r\n    )\r\n    .catch(error => console.log('parsing failed', error))\r\n  },[])\r\nlet Data1=leaguesSchedule.matches;\r\n\r\nconsole.log(\"eaguesSchedule\"+Data1);\r\nconsole.log(\"eaguesSchedule\"+Data1.map(item => (\"Дата начала:\"+item.season.startDate+\"Дата окончания:\"+item.season.startDate+\"   \"+\"Домашняя группа:\"+item.homeTeam.name+\"Гость:\"+item.homeTeam.name)));\r\n  let Data=props.Data;\r\n//const Data=leaguesSchedule;\r\n\r\n  useEffect( () =>{\r\n    setFilteredDataLeagues(\r\n      Data.filter( leaguesSchedule => {\r\n        return (leaguesSchedule.match_awayteam_name+leaguesSchedule.match_awayteam_name).toLowerCase().includes(search.toLowerCase())\r\n      })\r\n      )\r\n  },[search])\r\n\r\n  \r\n\r\n  const ll=filteredDataLeagues.map(item => (  \r\n    <li key={item.match_id}>Дата:{item.match_date} {item.match_time}       (Дом:{item.match_hometeam_name})   :   (Гость:{item.match_awayteam_name})\r\n    </li> \r\n  ))\r\n console.log(\"error\"+error);\r\n  console.log(\"loaded\"+loaded);\r\n  \r\n\treturn ( \r\n    <div className=\"content\">\r\n      <h1>{TITLE}</h1>\r\n      <input type=\"text\" placeholder=\"Название команды\" onChange={ e => setSearch(e.target.value)} />\r\n        <ul>    \r\n          {ll}\r\n        </ul>\r\n    </div>\r\n\t)  \r\n}\r\n\r\nexport default withRouter(LeagueSchedule);"]},"metadata":{},"sourceType":"module"}
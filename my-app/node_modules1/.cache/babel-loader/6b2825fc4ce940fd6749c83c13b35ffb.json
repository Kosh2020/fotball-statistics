{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Teams\\\\Teams.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport s from './Teams.module.css';\nimport Team from './Team/Team';\nconst TITLE = 'Команды лиги Championship';\n\nconst Teams = props => {\n  _s();\n\n  const [teams, setTeams] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [search, setSearch] = useState('');\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\n  useEffect(() => {\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\n    let league_id = props.match.params.league_id;\n    setLoaded(false);\n    console.log(\"error1111\");\n    fetch(\"https://apiv2.apifootball.com/?action=get_teams&league_id=\" + league_id + \"&APIkey=\" + API_KEY).then(res => res.json()).then(json => {\n      setLoaded(true);\n      setTeams(json);\n    }, error => {\n      setLoaded(true);\n      setError(error);\n    }).catch(error => console.log('parsing failed', error));\n  }, []);\n  let Data = props.Data; //const Data=teams;\n\n  useEffect(() => {\n    setFilteredDataLeagues(Data.filter(team => {\n      return team.team_name.toLowerCase().includes(search.toLowerCase());\n    }));\n  }, [search]);\n\n  const ListTeams = () => {\n    let result;\n    /* if (teams.error == undefined) { */\n\n    result = filteredDataLeagues.map(item => /*#__PURE__*/React.createElement(Team, {\n      team_id: item.team_key,\n      team_name: item.team_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n    /* }\r\n     else{ \r\n       result=<div>Данных нет</div>\r\n     }*/\n\n    return result;\n  };\n\n  console.log(\"Teams\");\n  console.log(\"loaded\" + loaded);\n  console.log(\"error\" + error);\n  /*  if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } \r\n    else if (!loaded) {\r\n        return <div>Loading...</div>;\r\n    } \r\n    else {*/\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, TITLE), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u044B\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListTeams, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }))); //}\n};\n\n_s(Teams, \"P6suWpXw4hut8qWgBBkhBnadtV4=\");\n\n_c = Teams;\nexport default _c2 = withRouter(Teams);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Teams\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Teams/Teams.js"],"names":["React","useState","useEffect","withRouter","s","Team","TITLE","Teams","props","teams","setTeams","loaded","setLoaded","error","setError","search","setSearch","filteredDataLeagues","setFilteredDataLeagues","API_KEY","process","env","REACT_APP_USER_TOKEN","league_id","match","params","console","log","fetch","then","res","json","catch","Data","filter","team","team_name","toLowerCase","includes","ListTeams","result","map","item","team_key","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport s from './Teams.module.css';\r\nimport Team  from './Team/Team';\r\n \r\nconst TITLE = 'Команды лиги Championship';\r\n\r\nconst Teams = (props) => {\r\n  const [teams, setTeams] = useState([]);\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\r\n\r\n  useEffect(() =>{\r\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    let league_id = props.match.params.league_id;\r\n    setLoaded(false);\r\n    console.log(\"error1111\");\r\n    fetch(\"https://apiv2.apifootball.com/?action=get_teams&league_id=\"+league_id+\"&APIkey=\"+API_KEY)\r\n      .then(res => res.json())\r\n      .then(\r\n        json => {\r\n          setLoaded(true);\r\n          setTeams(json);\r\n        },\r\n        (error) =>{\r\n          setLoaded(true);  \r\n          setError(error);\r\n        }\r\n      )\r\n      .catch(error => console.log('parsing failed', error))\r\n  },[])\r\n\r\n  let Data=props.Data;\r\n  //const Data=teams;\r\n\r\n  useEffect( () =>{\r\n    setFilteredDataLeagues(\r\n      Data.filter( team => {\r\n        return team.team_name.toLowerCase().includes(search.toLowerCase())\r\n      })\r\n      )\r\n  },[search])\r\n\r\n  \r\n  const ListTeams = () => {\r\n    let result\r\n   /* if (teams.error == undefined) { */\r\n      result=filteredDataLeagues.map(item => ( \r\n        < Team team_id={item.team_key} team_name={item.team_name}/> ));\r\n   /* }\r\n    else{ \r\n      result=<div>Данных нет</div>\r\n    }*/\r\n    return result;\r\n  }\r\n\r\nconsole.log(\"Teams\");\r\nconsole.log(\"loaded\"+loaded);\r\nconsole.log(\"error\"+error);\r\n\r\n/*  if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n  } \r\n  else if (!loaded) {\r\n      return <div>Loading...</div>;\r\n  } \r\n  else {*/\r\n\t  return(\r\n\t    <div >\r\n        <ul>\r\n          <h1>{TITLE}</h1>\r\n            <input type=\"text\" placeholder=\"Название команды\" onChange={ e => setSearch(e.target.value)} />\r\n          <ListTeams/>\r\n        </ul>\r\n      </div>)\r\n\t//}\r\n}\r\n\r\nexport default withRouter(Teams);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Leagues\\\\LeagueSchedule\\\\LeagueSchedule.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nconst TITLE = 'Расписание лиги Championship';\n\nconst LeagueSchedule = props => {\n  const [leaguesSchedule, setLeaguesSchedule] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [search, setSearch] = useState('');\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\n  /*useEffect(() =>{\r\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    let league_id = props.match.params.league_id;\r\n    let period = props.period;\r\n    //console.log(\"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+period);\r\n    setLoaded(false);\r\n    const apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+period;\r\n    fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n         'X-Auth-Token': API_KEY\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(\r\n      json => {\r\n        setLoaded(true);\r\n        setLeaguesSchedule(json);\r\n      },\r\n      (error) =>{\r\n        setLoaded(true);  \r\n        setError(error);\r\n      }\r\n    )\r\n    .catch(error => console.log('parsing failed', error))\r\n  },[])*/\n\n  let Data = props.Data.matches; //let Data=leaguesSchedule.matches;\n  //console.log(\"Data=\"+Data)\n\n  useEffect(() => {\n    if (Data !== undefined) {\n      setFilteredDataLeagues(Data.filter(leaguesSchedule => {\n        return (leaguesSchedule.homeTeam.name + leaguesSchedule.awayTeam.name).toLowerCase().includes(search.toLowerCase());\n      }));\n    } else setFilteredDataLeagues(null);\n  }, [search]);\n  let listItems = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\");\n\n  if (filteredDataLeagues !== null) {\n    listItems = filteredDataLeagues.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }\n    }, \"\\\"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430:\\\"+\", item.season.startDate, \"+\\\"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F:\\\"+\", item.season.startDate, \"+\\\"   \\\"+\\\"\\u0414\\u043E\\u043C\\u0430\\u0448\\u043D\\u044F\\u044F \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430:\\\"+\", item.homeTeam.name, \"+\\\"\\u0413\\u043E\\u0441\\u0442\\u044C:\\\"+\", item.awayTeam.name, \")))\"));\n  }\n  /*\r\n   if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } \r\n    else if (!loaded) {\r\n        return <div>Loading...</div>;\r\n    } \r\n    else {\r\n  */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, TITLE), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u044B\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, listItems)); //}\n};\n\nexport default withRouter(LeagueSchedule);","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Leagues/LeagueSchedule/LeagueSchedule.js"],"names":["React","useState","useEffect","withRouter","TITLE","LeagueSchedule","props","leaguesSchedule","setLeaguesSchedule","loaded","setLoaded","error","setError","search","setSearch","filteredDataLeagues","setFilteredDataLeagues","Data","matches","undefined","filter","homeTeam","name","awayTeam","toLowerCase","includes","listItems","map","item","id","season","startDate","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,KAAK,GAAG,8BAAd;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,mBAAD,EAAsBC,sBAAtB,IAAgDf,QAAQ,CAAC,EAAD,CAA9D;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEG,MAAIgB,IAAI,GAACX,KAAK,CAACW,IAAN,CAAWC,OAApB,CApC+B,CAqChC;AACA;;AAEAhB,EAAAA,SAAS,CAAE,MAAK;AACd,QAAIe,IAAI,KAAKE,SAAb,EAAuB;AACvBH,MAAAA,sBAAsB,CACpBC,IAAI,CAACG,MAAL,CAAab,eAAe,IAAI;AAC9B,eAAO,CAACA,eAAe,CAACc,QAAhB,CAAyBC,IAAzB,GAA8Bf,eAAe,CAACgB,QAAhB,CAAyBD,IAAxD,EAA8DE,WAA9D,GAA4EC,QAA5E,CAAqFZ,MAAM,CAACW,WAAP,EAArF,CAAP;AACD,OAFD,CADoB,CAAtB;AAII,KALJ,MAMKR,sBAAsB,CAAC,IAAD,CAAtB;AACN,GARQ,EAQP,CAACH,MAAD,CARO,CAAT;AAYA,MAAIa,SAAS,gBAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAAd;;AACA,MAAIX,mBAAmB,KAAK,IAA5B,EAAkC;AAC/BW,IAAAA,SAAS,GAACX,mBAAmB,CAACY,GAApB,CAAwBC,IAAI,iBACtC;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAAkCD,IAAI,CAACE,MAAL,CAAYC,SAA9C,4FAA4EH,IAAI,CAACE,MAAL,CAAYC,SAAxF,0GAA6HH,IAAI,CAACP,QAAL,CAAcC,IAA3I,2CAA2JM,IAAI,CAACL,QAAL,CAAcD,IAAzK,QADU,CAAV;AAIF;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,sBACG;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,KAAL,CADF,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,6FAA/B;AAAkD,IAAA,QAAQ,EAAG4B,CAAC,IAAIlB,SAAS,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,SADH,CAHJ,CADH,CApEiC,CA6ElC;AACC,CA9ED;;AAgFA,eAAevB,UAAU,CAACE,cAAD,CAAzB","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst TITLE = 'Расписание лиги Championship'\r\n\r\nconst LeagueSchedule = (props) => {\r\n  const [leaguesSchedule, setLeaguesSchedule] = useState([]);\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\r\n\r\n  /*useEffect(() =>{\r\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    let league_id = props.match.params.league_id;\r\n    let period = props.period;\r\n    //console.log(\"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+period);\r\n    setLoaded(false);\r\n    const apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+period;\r\n    fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n         'X-Auth-Token': API_KEY\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(\r\n      json => {\r\n        setLoaded(true);\r\n        setLeaguesSchedule(json);\r\n      },\r\n      (error) =>{\r\n        setLoaded(true);  \r\n        setError(error);\r\n      }\r\n    )\r\n    .catch(error => console.log('parsing failed', error))\r\n  },[])*/\r\n\r\n   let Data=props.Data.matches;\r\n  //let Data=leaguesSchedule.matches;\r\n  //console.log(\"Data=\"+Data)\r\n\r\n  useEffect( () =>{\r\n    if (Data !== undefined){\r\n    setFilteredDataLeagues(\r\n      Data.filter( leaguesSchedule => {\r\n        return (leaguesSchedule.homeTeam.name+leaguesSchedule.awayTeam.name).toLowerCase().includes(search.toLowerCase())\r\n      })\r\n      )}\r\n    else setFilteredDataLeagues(null)\r\n  },[search])\r\n\r\n \r\n\r\n  let listItems=<div>Нет данных</div> \r\n  if (filteredDataLeagues !== null ){\r\n     listItems=filteredDataLeagues.map(item => (  \r\n     <li key={item.id}>\"Дата начала:\"+{item.season.startDate}+\"Дата окончания:\"+{item.season.startDate}+\"   \"+\"Домашняя группа:\"+{item.homeTeam.name}+\"Гость:\"+{item.awayTeam.name})))\r\n     </li> \r\n  ))\r\n  }\r\n/*\r\n if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n  } \r\n  else if (!loaded) {\r\n      return <div>Loading...</div>;\r\n  } \r\n  else {\r\n*/\r\n\treturn ( \r\n    <div className=\"content\">\r\n      <h1>{TITLE}</h1>\r\n        <input type=\"text\" placeholder=\"Название команды\" onChange={ e => setSearch(e.target.value)} />\r\n        <ul>    \r\n          {listItems}\r\n        </ul>\r\n    </div>\r\n\t) \r\n//}\r\n}\r\n\r\nexport default withRouter(LeagueSchedule);"]},"metadata":{},"sourceType":"module"}
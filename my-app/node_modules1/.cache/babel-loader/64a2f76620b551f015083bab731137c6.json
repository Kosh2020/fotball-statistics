{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Leagues\\\\Leagues.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport s from './Leagues.module.css';\nimport League from './League/League';\nconst TITLE = 'Список лиг';\n\nconst Leagues = props => {\n  _s();\n\n  const [leagues, setLeagues] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [search, setSearch] = useState('');\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\n  useEffect(() => {\n    setLoaded(false);\n    let API_KEY = process.env.REACT_APP_USER_TOKEN; //const apiUrl = \"https://apiv2.apifootball.com/?action=get_leagues&APIkey=\"+API_KEY;\n\n    const apiUrl = \"https://api.football-data.org/v2/competitions/2021\";\n    fetch(apiUrl, {\n      method: 'GET',\n      headers: {\n        'X-Auth-Token': '79c229e5c59445cdb091adf3d2bee52b'\n      }\n    }).then(res => res.json()).then(json => {\n      setLoaded(true);\n      setLeagues(json);\n    }, error => {\n      setLoaded(true);\n      setError(error);\n    }).catch(error => console.log('parsing failed', error));\n  }, []);\n  useEffect(() => {\n    setFilteredDataLeagues(Data.filter(League => {\n      return League.name.toLowerCase().includes(search.toLowerCase());\n    }));\n  }, [search]); //let Data=props.Data;\n\n  const Data = leagues;\n  const ListLeagues = Data;\n  console.log(Data);\n  /*\r\n    const ListLeagues = () => {\r\n      let result\r\n  \t /* if (leagues.error == undefined) {*/\n\n  /*\t\t    result=filteredDataLeagues.map(item => ( \r\n            < League league_id={ item.code } league_name={ item.name } period={ props.period }/> ))\r\n      /*}\r\n      else{ \r\n      \t result = <div>Данных нет</div>\r\n      }*/\n\n  /*    return result;\r\n    }*/\n\n  console.log(\"Leagues\");\n  console.log(\"loaded\" + loaded);\n  console.log(\"error\" + error);\n  console.log(\"ListLeagues\");\n  console.log(\"ListLeagues\" + ListLeagues);\n  /*if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n  } \r\n  else if (!loaded) {\r\n      return <div>Loading...</div>;\r\n  } \r\n  else {*/\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, TITLE), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, props.period), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043B\\u0438\\u0433\\u0438\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.list_items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListLeagues, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }))); //return      \n  //}\n};\n\n_s(Leagues, \"+nvKdnErNk8EmyVHIb2yU1Mf/RQ=\");\n\n_c = Leagues;\nexport default Leagues;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leagues\");","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Leagues/Leagues.js"],"names":["React","useState","useEffect","s","League","TITLE","Leagues","props","leagues","setLeagues","loaded","setLoaded","error","setError","search","setSearch","filteredDataLeagues","setFilteredDataLeagues","API_KEY","process","env","REACT_APP_USER_TOKEN","apiUrl","fetch","method","headers","then","res","json","catch","console","log","Data","filter","name","toLowerCase","includes","ListLeagues","period","e","target","value","list_items"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport s from './Leagues.module.css';\r\nimport  League  from './League/League';\r\n\r\nconst TITLE = 'Список лиг';\r\n\r\nconst Leagues = (props) => {\r\n\r\n  const [leagues, setLeagues] = useState([]);\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\r\n\r\n  useEffect(() =>{\r\n\t  setLoaded(false);\r\n\t  let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    //const apiUrl = \"https://apiv2.apifootball.com/?action=get_leagues&APIkey=\"+API_KEY;\r\n    const apiUrl = \"https://api.football-data.org/v2/competitions/2021\";\r\n\t  fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n         'X-Auth-Token': '79c229e5c59445cdb091adf3d2bee52b'\r\n      }\r\n    })\r\n\t  .then(res => res.json())\r\n\t  .then(\r\n\t\t   json => {\r\n\t\t     setLoaded(true);\r\n\t\t     setLeagues(json);\r\n\t\t   },\r\n\t\t   (error) => {\r\n\t\t      setLoaded(true);\t\r\n          setError(error);\r\n\t\t    }\r\n\t  )\r\n\t  .catch(error => console.log('parsing failed', error))\r\n  },[])\r\n\r\n  useEffect( () =>{\r\n    setFilteredDataLeagues(\r\n      Data.filter( League => {\r\n        return League.name.toLowerCase().includes(search.toLowerCase())\r\n      })\r\n      )\r\n  },[search])\r\n  //let Data=props.Data;\r\n  const Data=leagues;\r\n  const ListLeagues=Data;\r\n  console.log(Data);\r\n/*\r\n  const ListLeagues = () => {\r\n    let result\r\n\t /* if (leagues.error == undefined) {*/\r\n/*\t\t    result=filteredDataLeagues.map(item => ( \r\n          < League league_id={ item.code } league_name={ item.name } period={ props.period }/> ))\r\n    /*}\r\n    else{ \r\n    \t result = <div>Данных нет</div>\r\n    }*/\r\n/*    return result;\r\n  }*/\r\n console.log(\"Leagues\");\r\n console.log(\"loaded\"+loaded);\r\n console.log(\"error\"+error);\r\n\r\n console.log(\"ListLeagues\");\r\n console.log(\"ListLeagues\"+ListLeagues);\r\n\r\n  /*if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n  } \r\n  else if (!loaded) {\r\n      return <div>Loading...</div>;\r\n  } \r\n  else {*/\r\n  \treturn( <div >\r\n            <h2>{ TITLE }</h2>\r\n            <h2>{ props.period }</h2>\r\n            <input type=\"text\" placeholder=\"Название лиги\" onChange={ e => setSearch(e.target.value)} />\r\n            <div className={ s.list_items }>         \r\n                <ListLeagues/>\r\n            </div>\r\n        </div>\r\n    )//return      \r\n  //}\r\n}\r\n\r\nexport default Leagues;"]},"metadata":{},"sourceType":"module"}
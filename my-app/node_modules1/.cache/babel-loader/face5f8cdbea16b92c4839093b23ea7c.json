{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Teams\\\\TeamSchedule\\\\TeamScheduleContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport TeamSchedule from './TeamSchedule';\nimport { withRouter } from 'react-router-dom';\nimport { setTeamSchedule } from \"../../../redux/teams-reducer\";\nimport { setLeagueCreator } from \"../../../redux/leagues-reducer\";\nimport { setStartDateTeamSchedule } from \"../../../redux/teams-reducer\";\nimport { setEndDateTeamSchedule } from \"../../../redux/teams-reducer\";\n\nclass TeamScheduleContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.selStartDate = date => {\n      this.props.setStartDateTeamSchedule(date);\n    };\n\n    this.selEndDate = date => {\n      this.props.setEndDateTeamSchedule(date);\n    };\n  }\n\n  //let league_id = props.match.params.league_id;\n  componentDidMount() {\n    //loaded='false';\n    let team_id = this.props.match.params.team_id;\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\n    let period = this.props.period; //setLoaded(false);\n    //https://api.football-data.org/v2/teams/66/matches?dateFrom=2019-01-01&dateTo=2019-12-08\n\n    const apiUrl = \"https://api.football-data.org/v2/teams/\" + team_id + \"/matches?dateFrom=2019-01-01&dateTo=2019-12-08\";\n    fetch(apiUrl, {\n      method: 'GET',\n      headers: {\n        'X-Auth-Token': API_KEY\n      }\n    }).then(response => response.json()).then(response => {\n      this.props.setTeamSchedule(response.matches); //this.setState({isLoaded: true});\n    }).then(error => {\n      this.setState({\n        false: true\n      });\n      this.setState({\n        error\n      });\n    }).catch(error => console.log('parsing failed', error)); //this.props.setTeamSchedule(this.props.Data);\n\n    /* action = setLeagueSchedule(this.props.Data.matches);\r\n     this.props.dispatch(action);\r\n    */\n    //const setLeagueCreator = (text) => ({ type: SET_LEAGUE, league:text });\n    //const storeLeagueSchedule = () => {this.props.store.getState().leagues.leagueSchedule};\n    //action = setLeagueSchedule(Data.matches);\n    //this.props.store.dispatch(setLeagueSchedule(leagueScheduleData.matches));  \n  }\n\n  render() {\n    /*if (error) {\r\n        \t\treturn <div>Error: {error.message}</div>;\r\n    \t\t} \r\n    \t\telse if (!loaded) {\r\n        \t\treturn <div>Loading...</div>;\r\n    \t\t} \r\n    \t\telse {*/\n    return /*#__PURE__*/React.createElement(TeamSchedule, {\n      league_name: this.props.league_name,\n      teamSchedule: this.props.teamSchedule,\n      team_name: this.props.team_name,\n      period: this.props.period,\n      startDate: this.props.startDate,\n      endDate: this.props.endDate,\n      selStartDate: this.selStartDate,\n      selEndDate: this.selEndDate,\n      search: this.props.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }); //}\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  teamSchedule: state.teams.teamSchedule,\n  league_name: state.leagues.league.name,\n  team_name: state.teams.team.name,\n  period: state.period,\n  startDate: state.teams.teamSchedule.startDate,\n  endDate: state.teams.teamSchedule.endDate,\n  search: state.search\n});\n\nexport default compose(connect(mapStateToProps, {\n  setTeamSchedule\n}), connect(mapStateToProps, {\n  setLeagueCreator\n}), connect(mapStateToProps, {\n  setStartDateTeamSchedule\n}), connect(mapStateToProps, {\n  setEndDateTeamSchedule\n}), withRouter)(TeamScheduleContainer); //league_name={this.props.league_name}setStartDateTeamSchedule","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Teams/TeamSchedule/TeamScheduleContainer.js"],"names":["React","Component","connect","compose","TeamSchedule","withRouter","setTeamSchedule","setLeagueCreator","setStartDateTeamSchedule","setEndDateTeamSchedule","TeamScheduleContainer","selStartDate","date","props","selEndDate","componentDidMount","team_id","match","params","API_KEY","process","env","REACT_APP_USER_TOKEN","period","apiUrl","fetch","method","headers","then","response","json","matches","error","setState","false","catch","console","log","render","league_name","teamSchedule","team_name","startDate","endDate","search","mapStateToProps","state","teams","leagues","league","name","team"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,SAAQC,gBAAR,QAA+B,gCAA/B;AACA,SAAQC,wBAAR,QAAuC,8BAAvC;AACA,SAAQC,sBAAR,QAAqC,8BAArC;;AAEA,MAAMC,qBAAN,SAAoCV,KAAK,CAACC,SAA1C,CAAoD;AAAA;AAAA;;AAAA,SAyClDU,YAzCkD,GAyClCC,IAAD,IAAU;AACrB,WAAKC,KAAL,CAAWL,wBAAX,CAAoCI,IAApC;AACH,KA3CiD;;AAAA,SA6ClDE,UA7CkD,GA6CpCF,IAAD,IAAU;AACnB,WAAKC,KAAL,CAAWJ,sBAAX,CAAkCG,IAAlC;AACH,KA/CiD;AAAA;;AAEpD;AACCG,EAAAA,iBAAiB,GAAE;AAClB;AACE,QAAIC,OAAO,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBF,OAAtC;AACF,QAAIG,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA1B;AAEE,QAAIC,MAAM,GAAG,KAAKV,KAAL,CAAWU,MAAxB,CALgB,CAMhB;AACA;;AACA,UAAMC,MAAM,GAAG,4CAA0CR,OAA1C,GAAkD,gDAAjE;AACAS,IAAAA,KAAK,CAACD,MAAD,EAAS;AACXE,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,OAAO,EAAE;AACP,wBAAgBR;AADT;AAFE,KAAT,CAAL,CAMCS,IAND,CAMOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EANpB,EAOCF,IAPD,CAOOC,QAAD,IAAc;AAClB,WAAKhB,KAAL,CAAWP,eAAX,CAA2BuB,QAAQ,CAACE,OAApC,EADkB,CAEjB;AACF,KAVD,EAWCH,IAXD,CAWOI,KAAD,IAAW;AACf,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAd;AACA,WAAKD,QAAL,CAAc;AAACD,QAAAA;AAAD,OAAd;AACD,KAdD,EAeCG,KAfD,CAeOH,KAAK,IAAII,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,KAA9B,CAfhB,EATgB,CA0BhB;;AACD;AACH;AACA;AAEC;AACA;AAEG;AACA;AAEA;;AASHM,EAAAA,MAAM,GAAG;AACR;AACF;AACA;AACA;AACA;AACA;AACA;AACI,wBACA,oBAAC,YAAD;AAAe,MAAA,WAAW,EAAE,KAAKzB,KAAL,CAAW0B,WAAvC;AAAqD,MAAA,YAAY,EAAE,KAAK1B,KAAL,CAAW2B,YAA9E;AAA4F,MAAA,SAAS,EAAE,KAAK3B,KAAL,CAAW4B,SAAlH;AAA6H,MAAA,MAAM,EAAI,KAAK5B,KAAL,CAAWU,MAAlJ;AAA0J,MAAA,SAAS,EAAI,KAAKV,KAAL,CAAW6B,SAAlL;AAA6L,MAAA,OAAO,EAAI,KAAK7B,KAAL,CAAW8B,OAAnN;AAA4N,MAAA,YAAY,EAAI,KAAKhC,YAAjP;AAA+P,MAAA,UAAU,EAAI,KAAKG,UAAlR;AAA8R,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAW+B,MAAjT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CARM,CAWR;AACA;;AA7DkD;;AAgEpD,IAAIC,eAAe,GAAIC,KAAD,KAAY;AAC9BN,EAAAA,YAAY,EAAGM,KAAK,CAACC,KAAN,CAAYP,YADG;AAE9BD,EAAAA,WAAW,EAAGO,KAAK,CAACE,OAAN,CAAcC,MAAd,CAAqBC,IAFL;AAG9BT,EAAAA,SAAS,EAAGK,KAAK,CAACC,KAAN,CAAYI,IAAZ,CAAiBD,IAHC;AAI9B3B,EAAAA,MAAM,EAACuB,KAAK,CAACvB,MAJiB;AAK9BmB,EAAAA,SAAS,EAAEI,KAAK,CAACC,KAAN,CAAYP,YAAZ,CAAyBE,SALN;AAM9BC,EAAAA,OAAO,EAAEG,KAAK,CAACC,KAAN,CAAYP,YAAZ,CAAyBG,OANJ;AAO9BC,EAAAA,MAAM,EAACE,KAAK,CAACF;AAPiB,CAAZ,CAAtB;;AAUA,eAAezC,OAAO,CAACD,OAAO,CAAC2C,eAAD,EAAiB;AAACvC,EAAAA;AAAD,CAAjB,CAAR,EACPJ,OAAO,CAAC2C,eAAD,EAAiB;AAACtC,EAAAA;AAAD,CAAjB,CADA,EAEPL,OAAO,CAAC2C,eAAD,EAAiB;AAACrC,EAAAA;AAAD,CAAjB,CAFA,EAGPN,OAAO,CAAC2C,eAAD,EAAiB;AAACpC,EAAAA;AAAD,CAAjB,CAHA,EAIPJ,UAJO,CAAP,CAKbK,qBALa,CAAf,C,CAOA","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport TeamSchedule from './TeamSchedule';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {setTeamSchedule} from \"../../../redux/teams-reducer\";\r\nimport {setLeagueCreator} from \"../../../redux/leagues-reducer\";\r\nimport {setStartDateTeamSchedule} from \"../../../redux/teams-reducer\";\r\nimport {setEndDateTeamSchedule} from \"../../../redux/teams-reducer\";\r\n\r\nclass TeamScheduleContainer extends React.Component {\r\n\r\n//let league_id = props.match.params.league_id;\r\n\tcomponentDidMount(){\r\n\t\t//loaded='false';\r\n    let team_id = this.props.match.params.team_id;\r\n\t\tlet API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    \t\r\n   \tlet period = this.props.period;\r\n   \t//setLoaded(false);\r\n    //https://api.football-data.org/v2/teams/66/matches?dateFrom=2019-01-01&dateTo=2019-12-08\r\n   \tconst apiUrl = \"https://api.football-data.org/v2/teams/\"+team_id+\"/matches?dateFrom=2019-01-01&dateTo=2019-12-08\";\r\n   \tfetch(apiUrl, {\r\n     \t\tmethod: 'GET',\r\n     \t\theaders: {\r\n      \t  'X-Auth-Token': API_KEY\r\n     \t\t}\r\n   \t})\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      this.props.setTeamSchedule(response.matches);\r\n       //this.setState({isLoaded: true});\r\n    })\r\n    .then((error) => {\r\n      this.setState({false: true});\r\n      this.setState({error});\r\n    })    \t\r\n    .catch(error => console.log('parsing failed', error))\r\n\r\n    //this.props.setTeamSchedule(this.props.Data);\r\n   /* action = setLeagueSchedule(this.props.Data.matches);\r\n    this.props.dispatch(action);\r\n */\r\n\r\n //const setLeagueCreator = (text) => ({ type: SET_LEAGUE, league:text });\r\n //const storeLeagueSchedule = () => {this.props.store.getState().leagues.leagueSchedule};\r\n\r\n    //action = setLeagueSchedule(Data.matches);\r\n    //this.props.store.dispatch(setLeagueSchedule(leagueScheduleData.matches));  \r\n\r\n  \t}\t\r\n  selStartDate = (date) => {\r\n      this.props.setStartDateTeamSchedule(date);\r\n  }\r\n\r\n  selEndDate = (date) => {\r\n      this.props.setEndDateTeamSchedule(date);\r\n  }\r\n\r\n\trender() {\r\n\t\t/*if (error) {\r\n      \t\treturn <div>Error: {error.message}</div>;\r\n  \t\t} \r\n  \t\telse if (!loaded) {\r\n      \t\treturn <div>Loading...</div>;\r\n  \t\t} \r\n  \t\telse {*/\r\n\t\t  return (\r\n\t\t\t\t<TeamSchedule  league_name={this.props.league_name}  teamSchedule={this.props.teamSchedule} team_name={this.props.team_name} period = {this.props.period} startDate = {this.props.startDate} endDate = {this.props.endDate} selStartDate = {this.selStartDate} selEndDate = {this.selEndDate} search={this.props.search}/>\r\n\t\t\t)\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    teamSchedule : state.teams.teamSchedule,\r\n    league_name : state.leagues.league.name,\r\n    team_name : state.teams.team.name,\r\n    period:state.period,\r\n    startDate: state.teams.teamSchedule.startDate,\r\n    endDate: state.teams.teamSchedule.endDate,\r\n    search:state.search\r\n})\r\n\r\nexport default compose(connect(mapStateToProps,{setTeamSchedule}),\r\n               connect(mapStateToProps,{setLeagueCreator}),\r\n               connect(mapStateToProps,{setStartDateTeamSchedule}),\r\n               connect(mapStateToProps,{setEndDateTeamSchedule}),\r\n               withRouter\r\n)(TeamScheduleContainer); \r\n\r\n//league_name={this.props.league_name}setStartDateTeamSchedule"]},"metadata":{},"sourceType":"module"}
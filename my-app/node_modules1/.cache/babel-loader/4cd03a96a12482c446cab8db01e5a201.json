{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Teams\\\\TeamsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Teams from './Teams';\nimport TeamSchedule from './TeamSchedule/TeamSchedule';\nimport { withRouter } from 'react-router-dom';\nimport { setTeamCreator } from \"../../redux/teams-reducer\";\nimport { setListTeamsCreator } from \"../../redux/teams-reducer\";\nimport { setLeagueCreator } from \"../../redux/leagues-reducer\";\nimport { compose } from \"redux\";\nimport Preloader from '../common/Preloader/Preloader';\n\nclass TeamsContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.selTeam = text => {\n      this.props.setTeamCreator(text);\n    };\n  }\n\n  /*componentWillMount(){\r\n     }*/\n  //let league_id = props.match.params.league_id;\n  componentDidMount() {\n    this.props.setListTeamsCreator(this.props.Data);\n    /*let league_id = this.props.match.params.league_id;\r\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    \t\r\n    \tlet period = this.props.period;\r\n    \t//console.log(\"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+period);\r\n    \t//setLoaded(false);\r\n     \r\n    \tconst apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/teams?season=\"+period;\r\n      \tfetch(apiUrl, {\r\n      \t\tmethod: 'GET',\r\n      \t\theaders: {\r\n         \t  'X-Auth-Token': API_KEY\r\n      \t\t}\r\n    \t})\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log({matches:response.teams});\r\n        this.props.setListTeamsCreator(response.teams);\r\n          //this.setState({isLoaded: true});\r\n      })\r\n      .then((error) => {\r\n          this.setState({false: true});\r\n          this.setState({error});\r\n      })    \t\r\n    \t.catch(error => console.log('parsing failed', error))\r\n    */\n    //setlistLeaguesCreator(this.props.Data.matches);\n\n    /* action = setLeagueSchedule(this.props.Data.matches);\r\n     this.props.dispatch(action);\r\n    */\n    // setListTeamsCreator(this.props.Data);\n    //const setLeagueCreator = (text) => ({ type: SET_LEAGUE, league:text });\n    //const storeLeagueSchedule = () => {this.props.store.getState().leagues.leagueSchedule};\n    //action = setLeagueSchedule(Data.matches);\n    //this.props.store.dispatch(setLeagueSchedule(leagueScheduleData.matches));  \n  }\n\n  render() {\n    /*if (error) {\r\n        \t\treturn <div>Error: {error.message}</div>;\r\n    \t\t} \r\n    \t\telse if (!loaded) {\r\n        \t\treturn <div>Loading...</div>;\r\n    \t\t} \r\n    \t\telse {*/\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Teams, {\n      teams: this.props.listTeams,\n      league_name: this.props.league_name,\n      period: this.props.period,\n      search: this.props.search,\n      selTeam: this.selTeam,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    })); //}\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  league_name: state.leagues.league.name,\n  listTeams: state.teams.listTeams,\n  period: state.period,\n  search: state.search,\n  isFetching: state.teams.isFetching\n});\n\nexport default compose(connect(mapStateToProps, {\n  setTeamCreator\n}), connect(mapStateToProps, {\n  setListTeamsCreator\n}), connect(mapStateToProps, {\n  setLeagueCreator\n}), withRouter)(TeamsContainer);","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Teams/TeamsContainer.js"],"names":["React","Component","connect","Teams","TeamSchedule","withRouter","setTeamCreator","setListTeamsCreator","setLeagueCreator","compose","Preloader","TeamsContainer","selTeam","text","props","componentDidMount","Data","render","isFetching","listTeams","league_name","period","search","mapStateToProps","state","leagues","league","name","teams"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,SAAQC,mBAAR,QAAkC,2BAAlC;AACA,SAAQC,gBAAR,QAA+B,6BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;AAEA,MAAMC,cAAN,SAA6BX,KAAK,CAACC,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAiD3CW,OAjD2C,GAiDhCC,IAAD,IAAU;AAChB,WAAKC,KAAL,CAAWR,cAAX,CAA0BO,IAA1B;AACC,KAnDsC;AAAA;;AAC3C;AACF;AACA;AAICE,EAAAA,iBAAiB,GAAE;AAChB,SAAKD,KAAL,CAAWP,mBAAX,CAA+B,KAAKO,KAAL,CAAWE,IAA1C;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEG;;AACA;AACH;AACA;AACC;AACA;AACA;AAEG;AACA;AAEA;;AAMHC,EAAAA,MAAM,GAAG;AACR;AACF;AACA;AACA;AACA;AACA;AACA;AACI,wBAAO,0CACE,KAAKH,KAAL,CAAWI,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAuC,IADzC,eAEH,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAI,KAAKJ,KAAL,CAAWK,SAA3B;AAAsC,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WAA9D;AAA2E,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,MAA9F;AAAsG,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,MAAzH;AAAiI,MAAA,OAAO,EAAE,KAAKV,OAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP,CARM,CAYR;AACA;;AAlE2C;;AAqE7C,IAAIW,eAAe,GAAIC,KAAD,KAAY;AAC9BJ,EAAAA,WAAW,EAAGI,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqBC,IADL;AAE9BR,EAAAA,SAAS,EAAGK,KAAK,CAACI,KAAN,CAAYT,SAFM;AAG9BE,EAAAA,MAAM,EAACG,KAAK,CAACH,MAHiB;AAI9BC,EAAAA,MAAM,EAACE,KAAK,CAACF,MAJiB;AAK9BJ,EAAAA,UAAU,EAAEM,KAAK,CAACI,KAAN,CAAYV;AALM,CAAZ,CAAtB;;AAQA,eAAeT,OAAO,CAACP,OAAO,CAACqB,eAAD,EAAiB;AAACjB,EAAAA;AAAD,CAAjB,CAAR,EACCJ,OAAO,CAACqB,eAAD,EAAiB;AAAChB,EAAAA;AAAD,CAAjB,CADR,EAECL,OAAO,CAACqB,eAAD,EAAiB;AAACf,EAAAA;AAAD,CAAjB,CAFR,EAGCH,UAHD,CAAP,CAIbM,cAJa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Teams from './Teams';\r\nimport TeamSchedule from './TeamSchedule/TeamSchedule';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {setTeamCreator} from \"../../redux/teams-reducer\";\r\nimport {setListTeamsCreator} from \"../../redux/teams-reducer\";\r\nimport {setLeagueCreator} from \"../../redux/leagues-reducer\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nclass TeamsContainer extends React.Component {\r\n  /*componentWillMount(){\r\n     }*/\r\n//let league_id = props.match.params.league_id;\r\n\r\n\r\n\t\r\n\tcomponentDidMount(){\r\n    this.props.setListTeamsCreator(this.props.Data)\r\n    /*let league_id = this.props.match.params.league_id;\r\n\t\tlet API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    \t\r\n    \tlet period = this.props.period;\r\n    \t//console.log(\"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+period);\r\n    \t//setLoaded(false);\r\n     \r\n    \tconst apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/teams?season=\"+period;\r\n\r\n    \tfetch(apiUrl, {\r\n      \t\tmethod: 'GET',\r\n      \t\theaders: {\r\n         \t  'X-Auth-Token': API_KEY\r\n      \t\t}\r\n    \t})\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log({matches:response.teams});\r\n        this.props.setListTeamsCreator(response.teams);\r\n          //this.setState({isLoaded: true});\r\n      })\r\n      .then((error) => {\r\n          this.setState({false: true});\r\n          this.setState({error});\r\n      })    \t\r\n    \t.catch(error => console.log('parsing failed', error))\r\n*/\r\n   //setlistLeaguesCreator(this.props.Data.matches);\r\n   /* action = setLeagueSchedule(this.props.Data.matches);\r\n    this.props.dispatch(action);\r\n */\r\n // setListTeamsCreator(this.props.Data);\r\n //const setLeagueCreator = (text) => ({ type: SET_LEAGUE, league:text });\r\n //const storeLeagueSchedule = () => {this.props.store.getState().leagues.leagueSchedule};\r\n\r\n    //action = setLeagueSchedule(Data.matches);\r\n    //this.props.store.dispatch(setLeagueSchedule(leagueScheduleData.matches));  \r\n\r\n  \t}\t\r\n\r\n  selTeam = (text) => {\r\n      this.props.setTeamCreator(text);\r\n      }\r\n\r\n\trender() {  \r\n\t\t/*if (error) {\r\n      \t\treturn <div>Error: {error.message}</div>;\r\n  \t\t} \r\n  \t\telse if (!loaded) {\r\n      \t\treturn <div>Loading...</div>;\r\n  \t\t} \r\n  \t\telse {*/\r\n\t\t  return <>\r\n           { this.props.isFetching ? <Preloader />: null} \r\n\t\t\t     <Teams teams = {this.props.listTeams} league_name={this.props.league_name} period={this.props.period} search={this.props.search} selTeam={this.selTeam}/>\r\n\t\t\t</>\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    league_name : state.leagues.league.name,  \r\n    listTeams : state.teams.listTeams,\r\n    period:state.period,\r\n    search:state.search,\r\n    isFetching: state.teams.isFetching\r\n})\r\n\r\nexport default compose(connect(mapStateToProps,{setTeamCreator}),\r\n                       connect(mapStateToProps,{setListTeamsCreator}),\r\n                       connect(mapStateToProps,{setLeagueCreator}),\r\n                       withRouter\r\n)(TeamsContainer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}
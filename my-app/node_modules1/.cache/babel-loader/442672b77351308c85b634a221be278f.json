{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Leagues\\\\LeagueSchedule\\\\LeagueScheduleContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport LeagueSchedule from './LeagueSchedule';\nimport Period from '../../common/Period/Period';\nimport { withRouter } from 'react-router-dom';\nimport { setLeagueSchedule } from \"../../../redux/leagues-reducer\";\nimport { setlistLeaguesCreator } from \"../../../redux/leagues-reducer\";\nimport { setLeagueCreator } from \"../../../redux/leagues-reducer\";\nimport { compose } from \"redux\"; //import leagueScheduleData from '../../../data/EventsOfLeague177';\n\nclass LeagueScheduleContainer extends React.Component {\n  //let league_id = props.match.params.league_id;\n  componentDidUpdate(prevProps) {\n    if (this.props.startDate + this.props.endDate !== prevProps.startDate || this.props.endDate + this.props.endDate !== prevProps.endDate) {\n      //loaded='false';\n      let league_id = this.props.match.params.league_id;\n      let API_KEY = process.env.REACT_APP_USER_TOKEN;\n      let year = this.props.year;\n      let dateFrom = moment(this.props.startDate).format('YYYY-MM-DD');\n      let dateTo = moment(this.props.endDate).format('YYYY-MM-DD'); //setLoaded(false);\n      //const apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+year;\n\n      const apiUrl = \"https://api.football-data.org/v2/competitions/\" + league_id + \"/matches?dateFrom=\" + dateFrom + \"&dateTo=\" + dateTo;\n      fetch(apiUrl, {\n        method: 'GET',\n        headers: {\n          'X-Auth-Token': API_KEY\n        }\n      }).then(response => response.json()).then(response => {\n        console.log({\n          matches: response.matches\n        });\n        this.props.setLeagueSchedule(response.matches);\n        let league = {\n          id: response.competition.code,\n          name: response.competition.name\n        };\n        this.props.setLeagueCreator(league); //this.setState({isLoaded: true});\n      }).then(error => {\n        this.setState({\n          false: true\n        });\n        this.setState({\n          error\n        });\n      }).catch(error => console.log('parsing failed', error)); //    this.props.setLeagueSchedule(this.props.Data.matches);\n      //action = setLeagueSchedule(Data.matches);\n      //this.props.store.dispatch(setLeagueSchedule(leagueScheduleData.matches));  \n    }\n  }\n  /*if (error) {\r\n      \t\treturn <div>Error: {error.message}</div>;\r\n  \t\t} \r\n  \t\telse if (!loaded) {\r\n      \t\treturn <div>Loading...</div>;\r\n  \t\t} \r\n  \t\telse {*/\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Period, {\n      store: this.props.store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(LeagueSchedule, {\n      leagueSchedule: this.props.leagueSchedule,\n      league_name: this.props.league_name,\n      year: this.props.year,\n      search: this.props.search,\n      startDate: this.props.startDate,\n      endDate: this.props.endDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    })); //}\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  leagueSchedule: state.leagues.leagueSchedule,\n  league_name: state.leagues.league.name,\n  year: state.year,\n  startDate: state.period.startDate,\n  endDate: state.period.endDate,\n  search: state.search\n});\n\nexport default compose(connect(mapStateToProps, {\n  setLeagueCreator\n}), connect(mapStateToProps, {\n  setLeagueSchedule\n}), withRouter)(LeagueScheduleContainer); //export default connect(mapStateToProps,{setLeagueSchedule})(withRouter(LeagueScheduleContainer));\n//export default LeagueScheduleContainer;\n//","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Leagues/LeagueSchedule/LeagueScheduleContainer.js"],"names":["React","Component","connect","moment","LeagueSchedule","Period","withRouter","setLeagueSchedule","setlistLeaguesCreator","setLeagueCreator","compose","LeagueScheduleContainer","componentDidUpdate","prevProps","props","startDate","endDate","league_id","match","params","API_KEY","process","env","REACT_APP_USER_TOKEN","year","dateFrom","format","dateTo","apiUrl","fetch","method","headers","then","response","json","console","log","matches","league","id","competition","code","name","error","setState","false","catch","render","store","leagueSchedule","league_name","search","mapStateToProps","state","leagues","period"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport moment from 'moment';\r\nimport LeagueSchedule from './LeagueSchedule';\r\nimport Period from '../../common/Period/Period';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {setLeagueSchedule} from \"../../../redux/leagues-reducer\";\r\nimport {setlistLeaguesCreator} from \"../../../redux/leagues-reducer\";\r\nimport {setLeagueCreator} from \"../../../redux/leagues-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n//import leagueScheduleData from '../../../data/EventsOfLeague177';\r\n\r\nclass LeagueScheduleContainer extends React.Component {\r\n\r\n//let league_id = props.match.params.league_id;\r\n\t\r\n\tcomponentDidUpdate(prevProps) {\r\n\r\n  if ((this.props.startDate+this.props.endDate !== prevProps.startDate)||(this.props.endDate+this.props.endDate !== prevProps.endDate)) {\r\n\r\n\t\t//loaded='false';\r\n    let league_id = this.props.match.params.league_id;\r\n\r\n\t\tlet API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    \t\r\n    \tlet year = this.props.year;\r\n      let dateFrom = moment(this.props.startDate).format('YYYY-MM-DD')\r\n      let dateTo = moment(this.props.endDate).format('YYYY-MM-DD')\r\n    \t//setLoaded(false);\r\n    \t//const apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+year;\r\n      const apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?dateFrom=\"+dateFrom+\"&dateTo=\"+dateTo;\r\n    \tfetch(apiUrl, {\r\n      \t\tmethod: 'GET',\r\n      \t\theaders: {\r\n         \t  'X-Auth-Token': API_KEY\r\n      \t\t}\r\n    \t})\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log({matches:response.matches});\r\n        this.props.setLeagueSchedule(response.matches);\r\n        let league={id:response.competition.code, name: response.competition.name}\r\n        this.props.setLeagueCreator(league);\r\n          //this.setState({isLoaded: true});\r\n      })\r\n      .then((error) => {\r\n          this.setState({false: true});\r\n          this.setState({error});\r\n      })    \t\r\n    \t.catch(error => console.log('parsing failed', error))\r\n\r\n   \r\n//    this.props.setLeagueSchedule(this.props.Data.matches);\r\n   \r\n \r\n    //action = setLeagueSchedule(Data.matches);\r\n    //this.props.store.dispatch(setLeagueSchedule(leagueScheduleData.matches));  \r\n}\r\n  \t}\t\r\n\r\n\r\n\t\r\n\t\t/*if (error) {\r\n      \t\treturn <div>Error: {error.message}</div>;\r\n  \t\t} \r\n  \t\telse if (!loaded) {\r\n      \t\treturn <div>Loading...</div>;\r\n  \t\t} \r\n  \t\telse {*/\r\n\r\n\r\n\r\n    render() {\r\n\t\t  return <>\r\n        <Period store={this.props.store} />\r\n\t\t\t\t<LeagueSchedule  leagueSchedule = {this.props.leagueSchedule} league_name={this.props.league_name} year={this.props.year} search={this.props.search} startDate={this.props.startDate} endDate={this.props.endDate}/>\r\n\t\t\t</>\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    leagueSchedule : state.leagues.leagueSchedule,\r\n    league_name : state.leagues.league.name,\r\n    year:state.year,\r\n    startDate: state.period.startDate,\r\n    endDate: state.period.endDate,\r\n    search:state.search\r\n})\r\n\r\nexport default compose( connect(mapStateToProps,{setLeagueCreator}),\r\n                        connect(mapStateToProps,{setLeagueSchedule}),\r\n                withRouter\r\n)(LeagueScheduleContainer);\r\n//export default connect(mapStateToProps,{setLeagueSchedule})(withRouter(LeagueScheduleContainer));\r\n//export default LeagueScheduleContainer;\r\n// "]},"metadata":{},"sourceType":"module"}
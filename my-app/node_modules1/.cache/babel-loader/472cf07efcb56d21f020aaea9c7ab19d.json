{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Katusha\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{withRouter}from'react-router-dom';import s from'./TeamSchedule.module.css';var TITLE='Расписание команды Swansea';var TeamSchedule=function TeamSchedule(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),teamSchedule=_useState2[0],setTeamSchedule=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loaded=_useState4[0],setLoaded=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),search=_useState8[0],setSearch=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),filteredDataLeagues=_useState10[0],setFilteredDataLeagues=_useState10[1];useEffect(function(){setLoaded(false);var API_KEY=process.env.REACT_APP_USER_TOKEN;var team_id=props.match.params.team_id;fetch(\"https://apiv2.apifootball.com/?action=get_events&from=2020-12-01&to=2021-01-03&team_id=\"+team_id+\"&APIkey=\"+API_KEY).then(function(res){return res.json();}).then(function(json){setLoaded(true);setTeamSchedule(json);},function(error){setLoaded(true);setError(error);}).catch(function(error){return console.log('parsing failed',error);});},[]);var Data=props.Data;//const Data=teams;\nuseEffect(function(){setFilteredDataLeagues(Data.filter(function(teamSchedule){return(teamSchedule.match_awayteam_name+teamSchedule.match_awayteam_name).toLowerCase().includes(search.toLowerCase());}));},[search]);console.log(\"teamSchedule\");console.log(\"loaded\"+loaded);console.log(\"error\"+error);var kk=filteredDataLeagues.map(function(item){return/*#__PURE__*/React.createElement(\"li\",{key:item.match_id},\"\\u0414\\u0430\\u0442\\u0430:\",item.match_date,\" \",item.match_time,\"       (\\u0413\\u043E\\u0441\\u0442\\u044C:\",item.match_awayteam_name,\")\");});console.log(\"ssss\"+kk);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"h1\",null,TITLE),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Search\",onChange:function onChange(e){return setSearch(e.target.value);}}),kk));};export default withRouter(TeamSchedule);","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Teams/TeamSchedule/TeamSchedule.js"],"names":["React","useState","useEffect","withRouter","s","TITLE","TeamSchedule","props","teamSchedule","setTeamSchedule","loaded","setLoaded","error","setError","search","setSearch","filteredDataLeagues","setFilteredDataLeagues","API_KEY","process","env","REACT_APP_USER_TOKEN","team_id","match","params","fetch","then","res","json","catch","console","log","Data","filter","match_awayteam_name","toLowerCase","includes","kk","map","item","match_id","match_date","match_time","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport s from './TeamSchedule.module.css';\r\n\r\nconst TITLE = 'Расписание команды Swansea';\r\n \r\nconst TeamSchedule = (props) => {\r\n  const [teamSchedule, setTeamSchedule] = useState([]);\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\r\n\r\n  useEffect(() =>{\r\n  setLoaded(false);\r\n  let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n  let team_id = props.match.params.team_id;\r\n  fetch(\"https://apiv2.apifootball.com/?action=get_events&from=2020-12-01&to=2021-01-03&team_id=\"+team_id+\"&APIkey=\"+API_KEY)\r\n  .then(res => res.json())\r\n  .then(\r\n    json => {\r\n      setLoaded(true);\r\n      setTeamSchedule(json);\r\n    },\r\n    (error) =>{\r\n      setLoaded(true);  \r\n          setError(error);\r\n    }\r\n  )\r\n  .catch(error => console.log('parsing failed', error))\r\n  },[])\r\n\r\n  let Data=props.Data;\r\n  //const Data=teams;\r\n\r\n  useEffect( () =>{\r\n    setFilteredDataLeagues(\r\n      Data.filter( teamSchedule => {\r\n        return (teamSchedule.match_awayteam_name+teamSchedule.match_awayteam_name).toLowerCase().includes(search.toLowerCase())\r\n      })\r\n      )\r\n  },[search])\r\n\r\n\r\nconsole.log(\"teamSchedule\");\r\nconsole.log(\"loaded\"+loaded);\r\nconsole.log(\"error\"+error);\r\n\r\n\r\n\r\nconst kk=filteredDataLeagues.map(item => (  \r\n                  <li key={item.match_id}>Дата:{item.match_date} {item.match_time}       (Гость:{item.match_awayteam_name})\r\n                  </li> ))\r\nconsole.log(\"ssss\"+kk);\r\n\treturn (\r\n\t\t<div >\r\n           <ul>\r\n            \t<h1>{TITLE}</h1>\r\n              <input type=\"text\" placeholder=\"Search\" onChange={ e => setSearch(e.target.value)} />\r\n            \t{kk}\r\n           </ul>\r\n        </div>\r\n\t)\r\n}\r\n\r\nexport default withRouter(TeamSchedule);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Katusha\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Katusha\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Katusha\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Katusha\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from\"react-redux\";import moment from'moment';import LeagueSchedule from'./LeagueSchedule';import Period from'../../common/Period/Period';import{withRouter}from'react-router-dom';import{setLeagueSchedule}from\"../../../redux/leagues-reducer\";import{setlistLeaguesCreator}from\"../../../redux/leagues-reducer\";import{setLeagueCreator}from\"../../../redux/leagues-reducer\";import{compose}from\"redux\";//import leagueScheduleData from '../../../data/EventsOfLeague177';\nvar LeagueScheduleContainer=/*#__PURE__*/function(_React$Component){_inherits(LeagueScheduleContainer,_React$Component);var _super=_createSuper(LeagueScheduleContainer);function LeagueScheduleContainer(){var _this;_classCallCheck(this,LeagueScheduleContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.apiToState=function(){var league_id=_this.props.match.params.league_id;var API_KEY=process.env.REACT_APP_USER_TOKEN;var year=_this.props.year;var dateFrom=moment(_this.props.startDate).format('YYYY-MM-DD');var dateTo=moment(_this.props.endDate).format('YYYY-MM-DD');//setLoaded(false);\n//const apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+year;\nvar apiUrl=\"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?dateFrom=\"+dateFrom+\"&dateTo=\"+dateTo;fetch(apiUrl,{method:'GET',headers:{'X-Auth-Token':API_KEY}}).then(function(response){return response.json();}).then(function(response){console.log({matches:response.matches});_this.props.setLeagueSchedule(response.matches);if(_this.props.league_id!==_this.props.match.params.league_id){var league={id:response.competition.code,name:response.competition.name};_this.props.setLeagueCreator(league);}//this.setState({isLoaded: true});\n// }\n}).then(function(error){_this.setState({false:true});_this.setState({error:error});}).catch(function(error){return console.log('parsing failed',error);});};return _this;}_createClass(LeagueScheduleContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.apiToState();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.league_id!==this.props.match.params.league_id||this.props.startDate!==prevProps.startDate||this.props.endDate!==prevProps.endDate){this.apiToState();//    this.props.setLeagueSchedule(this.props.Data.matches);\n//action = setLeagueSchedule(Data.matches);\n//this.props.store.dispatch(setLeagueSchedule(leagueScheduleData.matches));  \n}}/*if (error) {\r\n      \t\treturn <div>Error: {error.message}</div>;\r\n  \t\t} \r\n  \t\telse if (!loaded) {\r\n      \t\treturn <div>Loading...</div>;\r\n  \t\t} \r\n  \t\telse {*/},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Period,{store:this.props.store}),/*#__PURE__*/React.createElement(LeagueSchedule,{leagueSchedule:this.props.leagueSchedule,league_name:this.props.league_name,year:this.props.year,search:this.props.search,startDate:this.props.startDate,endDate:this.props.endDate}));}}]);return LeagueScheduleContainer;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{leagueSchedule:state.leagues.leagueSchedule,league_id:state.leagues.league.id,league_name:state.leagues.league.name,year:state.year,startDate:state.period.startDate,endDate:state.period.endDate,search:state.search};};export default compose(connect(mapStateToProps,{setLeagueCreator:setLeagueCreator}),connect(mapStateToProps,{setLeagueSchedule:setLeagueSchedule}),withRouter)(LeagueScheduleContainer);","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Leagues/LeagueSchedule/LeagueScheduleContainer.js"],"names":["React","Component","connect","moment","LeagueSchedule","Period","withRouter","setLeagueSchedule","setlistLeaguesCreator","setLeagueCreator","compose","LeagueScheduleContainer","apiToState","league_id","props","match","params","API_KEY","process","env","REACT_APP_USER_TOKEN","year","dateFrom","startDate","format","dateTo","endDate","apiUrl","fetch","method","headers","then","response","json","console","log","matches","league","id","competition","code","name","error","setState","false","catch","prevProps","store","leagueSchedule","league_name","search","mapStateToProps","state","leagues","period"],"mappings":"wkBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAAQC,iBAAR,KAAgC,gCAAhC,CACA,OAAQC,qBAAR,KAAoC,gCAApC,CACA,OAAQC,gBAAR,KAA+B,gCAA/B,CACA,OAAQC,OAAR,KAAsB,OAAtB,CAEA;GAEMC,CAAAA,uB,2YAENC,U,CAAY,UAAI,CACZ,GAAIC,CAAAA,SAAS,CAAG,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,SAAxC,CAEA,GAAII,CAAAA,OAAO,CAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA1B,CAEE,GAAIC,CAAAA,IAAI,CAAG,MAAKP,KAAL,CAAWO,IAAtB,CACA,GAAIC,CAAAA,QAAQ,CAAGnB,MAAM,CAAC,MAAKW,KAAL,CAAWS,SAAZ,CAAN,CAA6BC,MAA7B,CAAoC,YAApC,CAAf,CACA,GAAIC,CAAAA,MAAM,CAAGtB,MAAM,CAAC,MAAKW,KAAL,CAAWY,OAAZ,CAAN,CAA2BF,MAA3B,CAAkC,YAAlC,CAAb,CACA;AACA;AACA,GAAMG,CAAAA,MAAM,CAAG,iDAAiDd,SAAjD,CAA2D,oBAA3D,CAAgFS,QAAhF,CAAyF,UAAzF,CAAoGG,MAAnH,CACAG,KAAK,CAACD,MAAD,CAAS,CACVE,MAAM,CAAE,KADE,CAEVC,OAAO,CAAE,CACP,eAAgBb,OADT,CAFC,CAAT,CAAL,CAMCc,IAND,CAMM,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EANN,EAOCF,IAPD,CAOM,SAACC,QAAD,CAAc,CAClBE,OAAO,CAACC,GAAR,CAAY,CAACC,OAAO,CAACJ,QAAQ,CAACI,OAAlB,CAAZ,EACA,MAAKtB,KAAL,CAAWP,iBAAX,CAA6ByB,QAAQ,CAACI,OAAtC,EAEA,GAAI,MAAKtB,KAAL,CAAWD,SAAX,GAAyB,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,SAArD,CACG,CAAC,GAAIwB,CAAAA,MAAM,CAAC,CAACC,EAAE,CAACN,QAAQ,CAACO,WAAT,CAAqBC,IAAzB,CAA+BC,IAAI,CAAET,QAAQ,CAACO,WAAT,CAAqBE,IAA1D,CAAX,CACA,MAAK3B,KAAL,CAAWL,gBAAX,CAA4B4B,MAA5B,EAAqC,CACvC;AACH;AACA,CAhBD,EAiBCN,IAjBD,CAiBM,SAACW,KAAD,CAAW,CACb,MAAKC,QAAL,CAAc,CAACC,KAAK,CAAE,IAAR,CAAd,EACA,MAAKD,QAAL,CAAc,CAACD,KAAK,CAALA,KAAD,CAAd,EACH,CApBD,EAqBCG,KArBD,CAqBO,SAAAH,KAAK,QAAIR,CAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BO,KAA9B,CAAJ,EArBZ,EAsBL,C,oFAED,4BAAoB,CAClB,KAAK9B,UAAL,GAAmB,C,kCAEpB,4BAAmBkC,SAAnB,CAA8B,CAE7B,GAAK,KAAKhC,KAAL,CAAWD,SAAX,GAAyB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,SAAlD,EAA+D,KAAKC,KAAL,CAAWS,SAAX,GAAyBuB,SAAS,CAACvB,SAAlG,EAA+G,KAAKT,KAAL,CAAWY,OAAX,GAAuBoB,SAAS,CAACpB,OAApJ,CAA8J,CAE/J,KAAKd,UAAL,GAGD;AAGI;AACA;AACH,CACG,CAIF;AACF;AACA;AACA;AACA;AACA;AACA,Y,sBAII,iBAAS,CACT,mBAAO,qDACH,oBAAC,MAAD,EAAQ,KAAK,CAAE,KAAKE,KAAL,CAAWiC,KAA1B,EADG,cAEP,oBAAC,cAAD,EAAiB,cAAc,CAAI,KAAKjC,KAAL,CAAWkC,cAA9C,CAA8D,WAAW,CAAE,KAAKlC,KAAL,CAAWmC,WAAtF,CAAmG,IAAI,CAAE,KAAKnC,KAAL,CAAWO,IAApH,CAA0H,MAAM,CAAE,KAAKP,KAAL,CAAWoC,MAA7I,CAAqJ,SAAS,CAAE,KAAKpC,KAAL,CAAWS,SAA3K,CAAsL,OAAO,CAAE,KAAKT,KAAL,CAAWY,OAA1M,EAFO,CAAP,CAIF,C,qCAxEoC1B,KAAK,CAACC,S,EA2E5C,GAAIkD,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAC9BJ,cAAc,CAAGI,KAAK,CAACC,OAAN,CAAcL,cADD,CAE9BnC,SAAS,CAAGuC,KAAK,CAACC,OAAN,CAAchB,MAAd,CAAqBC,EAFH,CAG9BW,WAAW,CAAGG,KAAK,CAACC,OAAN,CAAchB,MAAd,CAAqBI,IAHL,CAI9BpB,IAAI,CAAC+B,KAAK,CAAC/B,IAJmB,CAK9BE,SAAS,CAAE6B,KAAK,CAACE,MAAN,CAAa/B,SALM,CAM9BG,OAAO,CAAE0B,KAAK,CAACE,MAAN,CAAa5B,OANQ,CAO9BwB,MAAM,CAACE,KAAK,CAACF,MAPiB,CAAZ,EAAtB,CAUA,cAAexC,CAAAA,OAAO,CAAER,OAAO,CAACiD,eAAD,CAAiB,CAAC1C,gBAAgB,CAAhBA,gBAAD,CAAjB,CAAT,CACEP,OAAO,CAACiD,eAAD,CAAiB,CAAC5C,iBAAiB,CAAjBA,iBAAD,CAAjB,CADT,CAEND,UAFM,CAAP,CAGbK,uBAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport moment from 'moment';\r\nimport LeagueSchedule from './LeagueSchedule';\r\nimport Period from '../../common/Period/Period';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {setLeagueSchedule} from \"../../../redux/leagues-reducer\";\r\nimport {setlistLeaguesCreator} from \"../../../redux/leagues-reducer\";\r\nimport {setLeagueCreator} from \"../../../redux/leagues-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n//import leagueScheduleData from '../../../data/EventsOfLeague177';\r\n\r\nclass LeagueScheduleContainer extends React.Component {\r\n\r\napiToState =()=>{\r\n    let league_id = this.props.match.params.league_id;\r\n\r\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n      \r\n      let year = this.props.year;\r\n      let dateFrom = moment(this.props.startDate).format('YYYY-MM-DD')\r\n      let dateTo = moment(this.props.endDate).format('YYYY-MM-DD')\r\n      //setLoaded(false);\r\n      //const apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?season=\"+year;\r\n      const apiUrl = \"https://api.football-data.org/v2/competitions/\"+league_id+\"/matches?dateFrom=\"+dateFrom+\"&dateTo=\"+dateTo;\r\n      fetch(apiUrl, {\r\n          method: 'GET',\r\n          headers: {\r\n            'X-Auth-Token': API_KEY\r\n          }\r\n      })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log({matches:response.matches});\r\n        this.props.setLeagueSchedule(response.matches);\r\n        \r\n        if (this.props.league_id !== this.props.match.params.league_id)\r\n           {let league={id:response.competition.code, name: response.competition.name};\r\n            this.props.setLeagueCreator(league);}\r\n          //this.setState({isLoaded: true});\r\n       // }\r\n      })\r\n      .then((error) => {\r\n          this.setState({false: true});\r\n          this.setState({error});\r\n      })      \r\n      .catch(error => console.log('parsing failed', error))\r\n}\r\n\t\r\ncomponentDidMount() {\r\n  this.apiToState();}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\r\n  if ((this.props.league_id !== this.props.match.params.league_id)||(this.props.startDate !== prevProps.startDate)||(this.props.endDate !== prevProps.endDate)) {\r\n\r\n\tthis.apiToState();\r\n\r\n   \r\n//    this.props.setLeagueSchedule(this.props.Data.matches);\r\n   \r\n \r\n    //action = setLeagueSchedule(Data.matches);\r\n    //this.props.store.dispatch(setLeagueSchedule(leagueScheduleData.matches));  \r\n}\r\n  \t}\t\r\n\r\n\r\n\t\r\n\t\t/*if (error) {\r\n      \t\treturn <div>Error: {error.message}</div>;\r\n  \t\t} \r\n  \t\telse if (!loaded) {\r\n      \t\treturn <div>Loading...</div>;\r\n  \t\t} \r\n  \t\telse {*/\r\n\r\n\r\n\r\n    render() {\r\n\t\t  return <>\r\n        <Period store={this.props.store} />\r\n\t\t\t\t<LeagueSchedule  leagueSchedule = {this.props.leagueSchedule} league_name={this.props.league_name} year={this.props.year} search={this.props.search} startDate={this.props.startDate} endDate={this.props.endDate}/>\r\n\t\t\t</>\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    leagueSchedule : state.leagues.leagueSchedule,\r\n    league_id : state.leagues.league.id,\r\n    league_name : state.leagues.league.name,\r\n    year:state.year,\r\n    startDate: state.period.startDate,\r\n    endDate: state.period.endDate,\r\n    search:state.search\r\n})\r\n\r\nexport default compose( connect(mapStateToProps,{setLeagueCreator}),\r\n                        connect(mapStateToProps,{setLeagueSchedule}),\r\n                withRouter\r\n)(LeagueScheduleContainer);\r\n"]},"metadata":{},"sourceType":"module"}
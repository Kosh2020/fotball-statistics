{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Katusha\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{withRouter}from'react-router-dom';import s from'./Teams.module.css';import Team from'./Team/Team';var TITLE='Команды лиги Championship';var Teams=function Teams(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),teams=_useState2[0],setTeams=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loaded=_useState4[0],setLoaded=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),search=_useState8[0],setSearch=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),filteredDataLeagues=_useState10[0],setFilteredDataLeagues=_useState10[1];useEffect(function(){var API_KEY=process.env.REACT_APP_USER_TOKEN;var league_id=props.match.params.league_id;setLoaded(false);//console.log(\"error1111\");\nfetch(\"https://apiv2.apifootball.com/?action=get_teams&league_id=\"+league_id+\"&APIkey=\"+API_KEY).then(function(res){return res.json();}).then(function(json){setLoaded(true);setTeams(json);},function(error){setLoaded(true);setError(error);}).catch(function(error){return console.log('parsing failed',error);});},[]);var Data=props.Data;//const Data=teams;\nuseEffect(function(){setFilteredDataLeagues(Data.filter(function(team){return team.team_name.toLowerCase().includes(search.toLowerCase());}));},[search]);var ListTeams=function ListTeams(){var result;/* if (teams.error == undefined) { */result=filteredDataLeagues.map(function(item){return/*#__PURE__*/React.createElement(Team,{team_id:item.team_key,team_name:item.team_name});});/* }\r\n    else{ \r\n      result=<div>Данных нет</div>\r\n    }*/return result;};//console.log(\"Teams\");\n//console.log(\"loaded\"+loaded);\n//console.log(\"error\"+error);\n/*  if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n  } \r\n  else if (!loaded) {\r\n      return <div>Loading...</div>;\r\n  } \r\n  else {*/return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"h1\",null,TITLE),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u044B\",onChange:function onChange(e){return setSearch(e.target.value);}}),/*#__PURE__*/React.createElement(ListTeams,null)));//}\n};export default withRouter(Teams);","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Teams/Teams.js"],"names":["React","useState","useEffect","withRouter","s","Team","TITLE","Teams","props","teams","setTeams","loaded","setLoaded","error","setError","search","setSearch","filteredDataLeagues","setFilteredDataLeagues","API_KEY","process","env","REACT_APP_USER_TOKEN","league_id","match","params","fetch","then","res","json","catch","console","log","Data","filter","team","team_name","toLowerCase","includes","ListTeams","result","map","item","team_key","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport s from './Teams.module.css';\r\nimport Team  from './Team/Team';\r\n \r\nconst TITLE = 'Команды лиги Championship';\r\n\r\nconst Teams = (props) => {\r\n  const [teams, setTeams] = useState([]);\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [filteredDataLeagues, setFilteredDataLeagues] = useState([]);\r\n\r\n  useEffect(() =>{\r\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n    let league_id = props.match.params.league_id;\r\n    setLoaded(false);\r\n    //console.log(\"error1111\");\r\n    fetch(\"https://apiv2.apifootball.com/?action=get_teams&league_id=\"+league_id+\"&APIkey=\"+API_KEY)\r\n      .then(res => res.json())\r\n      .then(\r\n        json => {\r\n          setLoaded(true);\r\n          setTeams(json);\r\n        },\r\n        (error) =>{\r\n          setLoaded(true);  \r\n          setError(error);\r\n        }\r\n      )\r\n      .catch(error => console.log('parsing failed', error))\r\n  },[])\r\n\r\n  let Data=props.Data;\r\n  //const Data=teams;\r\n\r\n  useEffect( () =>{\r\n    setFilteredDataLeagues(\r\n      Data.filter( team => {\r\n        return team.team_name.toLowerCase().includes(search.toLowerCase())\r\n      })\r\n      )\r\n  },[search])\r\n\r\n  \r\n  const ListTeams = () => {\r\n    let result\r\n   /* if (teams.error == undefined) { */\r\n      result=filteredDataLeagues.map(item => ( \r\n        < Team team_id={item.team_key} team_name={item.team_name}/> ));\r\n   /* }\r\n    else{ \r\n      result=<div>Данных нет</div>\r\n    }*/\r\n    return result;\r\n  }\r\n\r\n//console.log(\"Teams\");\r\n//console.log(\"loaded\"+loaded);\r\n//console.log(\"error\"+error);\r\n\r\n/*  if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n  } \r\n  else if (!loaded) {\r\n      return <div>Loading...</div>;\r\n  } \r\n  else {*/\r\n\t  return(\r\n\t    <div >\r\n        <ul>\r\n          <h1>{TITLE}</h1>\r\n            <input type=\"text\" placeholder=\"Название команды\" onChange={ e => setSearch(e.target.value)} />\r\n          <ListTeams/>\r\n        </ul>\r\n      </div>)\r\n\t//}\r\n}\r\n\r\nexport default withRouter(Teams);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Leagues\\\\Leagues.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport s from './Leagues.module.css';\nimport League from './League/League';\nconst TITLE = 'Список лиг';\nconst API_KEY = process.env.REACT_APP_USER_TOKEN;\n\nconst Leagues = props => {\n  _s();\n\n  const [leagues, setLeagues] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n    fetch(\"https://apiv2.apifootball.com/?action=get_leagues&APIkey=\" + API_KEY).then(res => res.json()).then(json => {\n      setLoaded(true);\n      setLeagues(json);\n    }, error => {\n      setLoaded(true);\n      setError(error);\n    }).catch(error => console.log('parsing failed', error));\n  }, []); //let Data=props.Data;\n\n  const Data = leagues;\n  console.log(\"Data.le\");\n  console.log(error);\n  console.log(loaded);\n  console.log(leagues);\n\n  const ListLeagues = () => {\n    let ListLeagues;\n\n    if (leagues.error == undefined) {\n      console.log(\"Data111\");\n      ListLeagues = leagues.map(item => /*#__PURE__*/React.createElement(League, {\n        league_id: item.league_id,\n        league_name: item.league_name,\n        period: props.period,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }\n      }));\n    } else {\n      ListLeagues = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 18\n        }\n      }, \"\\u0414\\u0430\\u043D\\u044B\\u044B\\u0445 \\u043D\\u0435\\u0442\");\n    }\n\n    return ListLeagues;\n  };\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }\n    }, \"Error: \", error.message);\n  } else if (!loaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, TITLE), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, props.period), /*#__PURE__*/React.createElement(\"div\", {\n      className: s.list_items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, ListLeagues)); //return      \n  }\n};\n\n_s(Leagues, \"hUxGKn/YKCyjRAGzMwIwGa/Jpw8=\");\n\n_c = Leagues;\nexport default Leagues;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leagues\");","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Leagues/Leagues.js"],"names":["React","useState","useEffect","s","League","TITLE","API_KEY","process","env","REACT_APP_USER_TOKEN","Leagues","props","leagues","setLeagues","loaded","setLoaded","error","setError","fetch","then","res","json","catch","console","log","Data","ListLeagues","undefined","map","item","league_id","league_name","period","message","list_items"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport s from './Leagues.module.css';\r\nimport  League  from './League/League';\r\n\r\n\r\n\r\nconst TITLE = 'Список лиг';\r\nconst API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n\r\nconst Leagues = (props) => {\r\nconst [leagues, setLeagues] = useState([]);\r\nconst [loaded, setLoaded] = useState(false);\r\nconst [error, setError] = useState(null);\r\n\r\n\r\nuseEffect(() =>{\r\n\tsetLoaded(false);\r\n\tfetch(\"https://apiv2.apifootball.com/?action=get_leagues&APIkey=\"+API_KEY)\r\n\t.then(res => res.json())\r\n\t.then(\r\n\t\tjson => {\r\n\t\t  setLoaded(true);\r\n\t\t  setLeagues(json);\r\n\t\t},\r\n\t\t(error) =>{\r\n\t\t  setLoaded(true);\t\r\n          setError(error);\r\n\t\t}\r\n\t)\r\n\t.catch(error => console.log('parsing failed', error))\r\n},[])\r\n\r\n\r\n\r\n\r\n\r\n//let Data=props.Data;\r\nconst Data=leagues;\r\n\r\nconsole.log(\"Data.le\");\r\nconsole.log(error);\r\nconsole.log(loaded);\r\nconsole.log(leagues);\r\nconst ListLeagues = () => {\r\nlet ListLeagues\r\n\tif (leagues.error == undefined) {\r\n\t\tconsole.log(\"Data111\");\r\n\t\tListLeagues=leagues.map(item => ( \r\n             < League league_id={ item.league_id } league_name={ item.league_name } period={ props.period }/> ))\r\n\r\n    }\r\n    else{ \r\n    \t\r\n    \tListLeagues=<div>Даныых нет</div>\r\n    \t\r\n    }\r\n    return ListLeagues;\r\n}\r\n\r\nif (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!loaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n    \r\n\treturn( <div >\r\n            <h2>{ TITLE }</h2>\r\n           \r\n            <h2>{ props.period }</h2>\r\n            <div className={ s.list_items }>         \r\n                {ListLeagues} \r\n            </div>\r\n        </div>\r\n  )//return      \r\n}}\r\n\r\nexport default Leagues;"]},"metadata":{},"sourceType":"module"}
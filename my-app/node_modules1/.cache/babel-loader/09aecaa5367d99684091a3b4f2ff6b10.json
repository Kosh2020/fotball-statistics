{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katusha\\\\my-app\\\\src\\\\components\\\\Teams\\\\TeamSchedule\\\\TeamScheduleContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport moment from 'moment';\nimport Period from '../../common/Period/Period';\nimport TeamSchedule from './TeamSchedule';\nimport { withRouter } from 'react-router-dom';\nimport { setTeamSchedule } from \"../../../redux/teams-reducer\";\nimport { setLeagueCreator } from \"../../../redux/leagues-reducer\";\nimport { setStartDatePeriod } from \"../../../redux/period-reducer\";\nimport { setEndDatePeriod } from \"../../../redux/period-reducer\";\n\nclass TeamScheduleContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.apiToState = () => {\n      let team_id = this.props.match.params.team_id;\n      let API_KEY = process.env.REACT_APP_USER_TOKEN;\n      let year = this.props.year;\n      let dateFrom = moment(this.props.startDate).format('YYYY-MM-DD');\n      let dateTo = moment(this.props.endDate).format('YYYY-MM-DD'); //setLoaded(false);\n      //https://api.football-data.org/v2/teams/66/matches?dateFrom=2019-01-01&dateTo=2019-12-08\n\n      const apiUrl = \"https://api.football-data.org/v2/teams/\" + team_id + \"/matches?dateFrom=\" + dateFrom + \"&dateTo=\" + dateTo;\n      fetch(apiUrl, {\n        method: 'GET',\n        headers: {\n          'X-Auth-Token': API_KEY\n        }\n      }).then(response => response.json()).then(response => {\n        this.props.setTeamSchedule(response.matches); //this.setState({isLoaded: true});\n      }).then(error => {\n        this.setState({\n          false: true\n        });\n        this.setState({\n          error\n        });\n      }).catch(error => console.log('parsing failed', error)); //this.props.setTeamSchedule(this.props.Data);\n\n      /* action = setLeagueSchedule(this.props.Data.matches);\r\n       this.props.dispatch(action);\r\n      */\n    };\n\n    this.selStartDate = date => {\n      this.props.setStartDatePeriod(date);\n    };\n\n    this.selEndDate = date => {\n      this.props.setEndDatePeriod(date);\n    };\n  }\n\n  componentDidMount(prevProps) {\n    apiToState();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.startDate !== prevProps.startDate || this.props.endDate !== prevProps.endDate) {\n      apiToState();\n    }\n  }\n\n  render() {\n    /*if (error) {\r\n        \t\treturn <div>Error: {error.message}</div>;\r\n    \t\t} \r\n    \t\telse if (!loaded) {\r\n        \t\treturn <div>Loading...</div>;\r\n    \t\t} \r\n    \t\telse {*/\n    return /*#__PURE__*/React.createElement(TeamSchedule, {\n      league_name: this.props.league_name,\n      teamSchedule: this.props.teamSchedule,\n      team_name: this.props.team_name,\n      year: this.props.year,\n      startDate: this.props.startDate,\n      endDate: this.props.endDate,\n      selStartDate: this.selStartDate,\n      selEndDate: this.selEndDate,\n      search: this.props.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }); //}\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  teamSchedule: state.teams.teamSchedule,\n  league_name: state.leagues.league.name,\n  team_name: state.teams.team.name,\n  team_id: state.teams.team.id,\n  year: state.year,\n  startDate: state.period.startDate,\n  endDate: state.period.endDate,\n  search: state.search\n});\n\nexport default compose(connect(mapStateToProps, {\n  setTeamSchedule\n}), connect(mapStateToProps, {\n  setLeagueCreator\n}), connect(mapStateToProps, {\n  setStartDatePeriod\n}), connect(mapStateToProps, {\n  setEndDatePeriod\n}), withRouter)(TeamScheduleContainer); //league_name={this.props.league_name}setStartDateTeamSchedule","map":{"version":3,"sources":["C:/Users/Katusha/my-app/src/components/Teams/TeamSchedule/TeamScheduleContainer.js"],"names":["React","Component","connect","compose","moment","Period","TeamSchedule","withRouter","setTeamSchedule","setLeagueCreator","setStartDatePeriod","setEndDatePeriod","TeamScheduleContainer","apiToState","team_id","props","match","params","API_KEY","process","env","REACT_APP_USER_TOKEN","year","dateFrom","startDate","format","dateTo","endDate","apiUrl","fetch","method","headers","then","response","json","matches","error","setState","false","catch","console","log","selStartDate","date","selEndDate","componentDidMount","prevProps","componentDidUpdate","render","league_name","teamSchedule","team_name","search","mapStateToProps","state","teams","leagues","league","name","team","id","period"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport moment from 'moment';\r\nimport Period from '../../common/Period/Period';\r\nimport TeamSchedule from './TeamSchedule';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {setTeamSchedule} from \"../../../redux/teams-reducer\";\r\nimport {setLeagueCreator} from \"../../../redux/leagues-reducer\";\r\nimport {setStartDatePeriod} from \"../../../redux/period-reducer\";\r\nimport {setEndDatePeriod} from \"../../../redux/period-reducer\";\r\n\r\nclass TeamScheduleContainer extends React.Component {\r\n\r\n\r\n\r\napiToState =()=>{\r\n      let team_id = this.props.match.params.team_id;\r\n    let API_KEY = process.env.REACT_APP_USER_TOKEN;\r\n      \r\n    let year = this.props.year;\r\n    let dateFrom = moment(this.props.startDate).format('YYYY-MM-DD')\r\n    let dateTo = moment(this.props.endDate).format('YYYY-MM-DD')\r\n    //setLoaded(false);\r\n    //https://api.football-data.org/v2/teams/66/matches?dateFrom=2019-01-01&dateTo=2019-12-08\r\n    const apiUrl = \"https://api.football-data.org/v2/teams/\"+team_id+\"/matches?dateFrom=\"+dateFrom+\"&dateTo=\"+dateTo;\r\n    fetch(apiUrl, {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Auth-Token': API_KEY\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      this.props.setTeamSchedule(response.matches);\r\n       //this.setState({isLoaded: true});\r\n    })\r\n    .then((error) => {\r\n      this.setState({false: true});\r\n      this.setState({error});\r\n    })      \r\n    .catch(error => console.log('parsing failed', error))\r\n\r\n  \r\n\r\n    //this.props.setTeamSchedule(this.props.Data);\r\n   /* action = setLeagueSchedule(this.props.Data.matches);\r\n    this.props.dispatch(action);\r\n */\r\n  \t}\t\r\ncomponentDidMount(prevProps) {\r\n   apiToState();\r\n}\r\ncomponentDidUpdate(prevProps) {\r\n  if ((this.props.startDate !== prevProps.startDate)||(this.props.endDate !== prevProps.endDate)) {\r\n      apiToState();\r\n}\r\n}\r\n  selStartDate = (date) => {\r\n      this.props.setStartDatePeriod(date);\r\n  }\r\n\r\n  selEndDate = (date) => {\r\n      this.props.setEndDatePeriod(date);\r\n  }\r\n\r\n\trender() {\r\n\t\t/*if (error) {\r\n      \t\treturn <div>Error: {error.message}</div>;\r\n  \t\t} \r\n  \t\telse if (!loaded) {\r\n      \t\treturn <div>Loading...</div>;\r\n  \t\t} \r\n  \t\telse {*/\r\n\t\t  return (\r\n\r\n\t\t\t\t<TeamSchedule  league_name={this.props.league_name}  teamSchedule={this.props.teamSchedule} team_name={this.props.team_name} year = {this.props.year} startDate = {this.props.startDate} endDate = {this.props.endDate} selStartDate = {this.selStartDate} selEndDate = {this.selEndDate} search={this.props.search}/>\r\n      \r\n\t\t\t)\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    teamSchedule : state.teams.teamSchedule,\r\n    league_name : state.leagues.league.name,\r\n    team_name : state.teams.team.name,\r\n    team_id : state.teams.team.id,\r\n    year:state.year,\r\n    startDate: state.period.startDate,\r\n    endDate: state.period.endDate,\r\n    search:state.search\r\n})\r\n\r\nexport default compose(connect(mapStateToProps,{setTeamSchedule}),\r\n               connect(mapStateToProps,{setLeagueCreator}),\r\n               connect(mapStateToProps,{setStartDatePeriod}),\r\n               connect(mapStateToProps,{setEndDatePeriod}),\r\n               withRouter\r\n)(TeamScheduleContainer); \r\n\r\n//league_name={this.props.league_name}setStartDateTeamSchedule"]},"metadata":{},"sourceType":"module"}